# Project: Nonmaternal care attendance and children's externalizing and externalizing behavior
# Script purpose: Subset data before making strata for the stratified data
# Author: Katharine Barry 
# Email: Katharine.Barry@inserm.fr

#load libraries
library(DSMolgenisArmadillo)
library(dsBaseClient)
library(dsHelper)
library(DSI)
library(DSOpal)

#login to all cohorts

## tokens

tokenelfe <- armadillo.get_token("https://armadillo.sicopre.elfe-france.fr")
tokeneden <- armadillo.get_token("https://armadillo.sicopre.elfe-france.fr")
tokenalspac <- armadillo.get_token("https://alspac-armadillo.molgenis.org")

#### login

builder <- DSI::newDSLoginBuilder()

#ALSPAC
builder$append(
  server = "alspac",
  url = "https://alspac-armadillo.molgenis.org",
  token = tokenalspac,
  driver = "ArmadilloDriver")

#GEN R
builder$append(server = "generationR", 
               url = "https://opal.erasmusmc.nl", user = "", 
               password = "",
               driver = "OpalDriver")

# DNBC
builder$append(server = "dnbc",
               url = "https://opal.sund.ku.dk",
               user ="",
               password= "",
               driver = "OpalDriver" )
#EDEN
builder$append(server ="eden",
               url="https://armadillo.sicopre.elfe-france.fr",
               token=tokeneden,
               driver="ArmadilloDriver")
# INMA
builder$append(server = "INMA", 
               url = "https://opal.isglobal.org/repo", 
               user = "", 
               password = "",
               driver = "OpalDriver",
               profile='rock-inma')
# ELFE
builder$append(server ="elfe",
               url="https://armadillo.sicopre.elfe-france.fr",
               token=tokenelfe,
               driver="ArmadilloDriver")
# all login
logindata <- builder$build()


c.data <- DSI::datashield.login(logins = logindata, restore="strata_some")

ds.colnames('analysis_df_l_int')
ds.table('analysis_df_l_int$f.sex')
ds.asNumeric('analysis_df_l_int$f.sex', newobj="sex_num")

ds.dataFrameSubset(
  df.name = "analysis_df_l_int", 
  V1.name = "sex_num", 
  V2.name = '1', 
  Boolean.operator = "==", 
  newobj = "boys_data")

ds.dim('boys_data')
ds.table('analysis_df_l_int$f.sex')


ds.dataFrameSubset(
  df.name = "analysis_df_l_int", 
  V1.name = "sex_num", 
  V2.name = '2', 
  Boolean.operator = "==", 
  newobj = "girls_data")

ds.dim('girls_data')
ds.colnames('girls_data')
datashield.workspace_save(c.data, "sex_int")


### externalizing behavior

ds.colnames('analysis_df_l_ext')
ds.table('analysis_df_l_ext$f.sex')
ds.asNumeric('analysis_df_l_ext$f.sex', newobj="sex_num")

ds.dataFrameSubset(
  df.name = "analysis_df_l_ext", 
  V1.name = "sex_num", 
  V2.name = '1', 
  Boolean.operator = "==", 
  newobj = "boys_data")

ds.dim('boys_data')
ds.table('analysis_df_l_ext$f.sex')


ds.dataFrameSubset(
  df.name = "analysis_df_l_ext", 
  V1.name = "sex_num", 
  V2.name = '2', 
  Boolean.operator = "==", 
  newobj = "girls_data")

ds.dim('girls_data')
ds.colnames('girls_data')
datashield.workspace_save(c.data, "sex_ext")


ds.asNumeric('analysis_df_l_int$f.edu_m_.0', newobj='momedu')
ds.table('momedu')

ds.recodeValues(var.name='momedu', values2replace.vector = c(1,2,3),
                new.values.vector = c(0,1,1), newobj='mom_high')

ds.asFactor('mom_high', newobj.name='f.mom_highedu')

ds.dataFrame(x=c('analysis_df_l_int', 'f.mom_highedu'), stringsAsFactors=FALSE, newobj='analysis_df_l_int')

ds.table('analysis_df_l_int$f.mom_highedu')
ds.dataFrameSubset(
  df.name = "analysis_df_l_int", 
  V1.name = "f.mom_highedu", 
  V2.name = '1', 
  Boolean.operator = "==", 
  newobj = "high_edu")

ds.dim('high_edu')
ds.table('analysis_df_l_int$f.mom_highedu')


ds.dataFrameSubset(
  df.name = "analysis_df_l_int", 
  V1.name = "f.mom_highedu", 
  V2.name = '0', 
  Boolean.operator = "==", 
  newobj = "low_edu")

ds.dim('low_edu')

datashield.workspace_save(c.data, "mom_edu_int")


### externalizing behavior

ds.asNumeric('analysis_df_l_ext$f.edu_m_.0', newobj='momedu')
ds.recodeValues(var.name='momedu', values2replace.vector = c(1,2,3),
                new.values.vector = c(0,1,1), newobj='mom_high')

ds.asFactor('mom_high', newobj.name='f.mom_highedu')

ds.dataFrame(x=c('analysis_df_l_ext', 'f.mom_highedu'), stringsAsFactors=FALSE, newobj='analysis_df_l_ext')


ds.dataFrameSubset(
  df.name = "analysis_df_l_ext", 
  V1.name = "f.mom_highedu", 
  V2.name = '1', 
  Boolean.operator = "==", 
  newobj = "high_edu")

ds.dim('high_edu')
ds.table('analysis_df_l_ext$f.mom_highedu')


ds.dataFrameSubset(
  df.name = "analysis_df_l_ext", 
  V1.name = "f.mom_highedu", 
  V2.name = '0', 
  Boolean.operator = "==", 
  newobj = "low_edu")

ds.dim('low_edu')

datashield.workspace_save(c.data, "mom_edu_ext")



