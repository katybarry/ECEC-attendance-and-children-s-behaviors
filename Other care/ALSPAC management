library(DSMolgenisArmadillo)
library(dsBaseClient)
library(dsHelper)
library(DSI)
library(DSOpal)

#login to ALSPAC data
token <- armadillo.get_token("https://alspac-armadillo.molgenis.org")
builder <- DSI::newDSLoginBuilder()

builder$append(
  server = "alspac",
  url = "https://alspac-armadillo.molgenis.org",
  table = "lc13/2_1_core_1_3/non_rep", 
  token = token,
  driver = "ArmadilloDriver"
)

logindata <- builder$build()
conns <- DSI::datashield.login(logins = logindata, restore = "interactions")


ds.asNumeric('final$childcarerel_.1', newobj='rel_1')
ds.asNumeric('final$childcarerel_.2', newobj='rel_2')
ds.asNumeric('final$childcarerel_.3', newobj='rel_3')

#changing the NAs so that we do not lose individuals due to the merging of year 1 and year 2 variable:
ds.replaceNA(x='rel_1', forNA =100, newobj="NArel_.1")
ds.replaceNA(x='rel_2', forNA =100, newobj="NArel_.2")
ds.replaceNA(x='rel_3', forNA =100, newobj="NArel_.3")

ds.table('NArel_.1')

ds.make(toAssign='NArel_.1+ NArel_.2+ NArel_.3', newobj = 'relcare')
ds.table ('relcare', datasources=conns) 

ds.recodeValues(var.name='relcare', values2replace.vector = c(200,201,300),
                new.values.vector = c(0,1,9999), newobj='rel_care')
ds.table('rel_care')


ds.asNumeric('final$childcareprof_.1', newobj='prof_1')
ds.asNumeric('final$childcareprof_.2', newobj='prof_2')
ds.asNumeric('final$childcareprof_.3', newobj='prof_3')

#changing the NAs so that we do not lose individuals due to the merging of year 1 and year 2 variable:

ds.replaceNA(x='prof_1', forNA =100, newobj="NAprof_.1")
ds.replaceNA(x='prof_2', forNA =100, newobj="NAprof_.2")
ds.replaceNA(x='prof_3', forNA =100, newobj="NAprof_.3")

ds.make(toAssign='NAprof_.1+ NAprof_.2+ NAprof_.3', newobj = 'profcare')

ds.table ('profcare', datasources=conns) 

ds.recodeValues(var.name='profcare', values2replace.vector = c(200,201,300),
                new.values.vector = c(0,1,9999), newobj='prof_care')

ds.table('prof_care')


ds.asNumeric('final$childcare_.1', newobj='other_1')
ds.asNumeric('final$childcare_.2', newobj='other_2')
ds.asNumeric('final$childcare_.3', newobj='other_3')

#changing the NAs so that we do not lose individuals due to the merging of year 1 and year 2 variable:

ds.replaceNA(x='other_1', forNA =100, newobj="NAother_.1")
ds.replaceNA(x='other_2', forNA =100, newobj="NAother_.2")
ds.replaceNA(x='other_3', forNA =100, newobj="NAother_.3")

ds.make(toAssign='NAother_.1+ NAother_.2+ NAother_.3', newobj = 'othercare')
ds.table ('othercare', datasources=conns) 
ds.recodeValues(var.name='othercare', values2replace.vector = c(200,201,300),
                new.values.vector = c(0,1,9999), newobj='other_care')

ds.table("other_care")

# ECEC care
ds.recodeValues(var.name='centre_care', 
                values2replace.vector = c(0,1,NA),
                new.values.vector = c(1000,2000,9999), newobj='centre_care_T')
ds.table('centre_care_T')

ds.make(toAssign='centre_care_T+rel_care+prof_care+other_care', newobj = 'types_care')
ds.table("types_care")



ds.recodeValues(var.name='types_care', values2replace.vector = c(1000,2000,9999,1001),
                new.values.vector = c(0,1,0,2), newobj='types_care1')

ds.recodeValues(var.name='types_care1', values2replace.vector = c(29998,39996),
                new.values.vector = c(1,2,2,1), newobj='types_care2')

ds.recodeValues(var.name='types_care1', values2replace.vector = c(2001,10000,1002,2002),
                new.values.vector = c(1,2,2,1), newobj='types_care2')

ds.recodeValues(var.name='types_care2', values2replace.vector = c(10001,1003,2003),
                new.values.vector = c(2,2,1), newobj='types_care3')

ds.recodeValues(var.name='types_care3', values2replace.vector = c(10002,10999,11999),
                new.values.vector = c(2,0,1), newobj='types_care4')

ds.recodeValues(var.name='types_care4', values2replace.vector = c(19998,11000,12000),
                new.values.vector = c(0,2,1), newobj='types_care5')

ds.recodeValues(var.name='types_care5', values2replace.vector = c(19999,11001,12001),
                new.values.vector = c(2,2,1), newobj='types_care6')

ds.recodeValues(var.name='types_care6', values2replace.vector = c(19999,11001,12001),
                new.values.vector = c(2,2,1), newobj='types_care7')

ds.recodeValues(var.name='types_care7', values2replace.vector = c(20000,20998,21998),
                new.values.vector = c(2,0,1), newobj='types_care8')

ds.recodeValues(var.name='types_care8', values2replace.vector = c(29997,20999,21999),
                new.values.vector = c(0,2,1), newobj='types_care9')

ds.recodeValues(var.name='types_care9', values2replace.vector = c(29998,39996,30997),
                new.values.vector = c(2,NA,0), newobj='type_care')

ds.table('type_care')
# 0= no type of care 1= ECEC care 2= other care
ds.dataFrame(x=c('final','type_care', 'prof_care'), newobj='final')

datashield.workspace_save(conns = conns, ws = "othertypesofcare")

