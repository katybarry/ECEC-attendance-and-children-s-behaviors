# Project: Childcare attendance and children's internalizing and externalizing behavior
# Script purpose: testing interactions for household monthly income and mother's post-partum depression on all cohorts
# Author: Katharine Barry 
# Email: Katharine.Barry@inserm.fr
#load libraries
library(DSMolgenisArmadillo)
library(dsBaseClient)
library(remotes)
install_github("lifecycle-project/ds-helper")
library(DSI)
library(DSOpal)
library('stringr')
#login to all cohorts

c.data <- DSI::datashield.login(logins = logindata, restore="interactions")

ds.colnames('final')
ds.dim('final')

## dichotomize income level for interaction tests
ds.asNumeric("final$eusilc_income_quintiles", newobj='numincome')
ds.table('numincome')
ds.recodeValues(var.name='numincome', values2replace.vector = c(1,2,3,4,5), new.values.vector = c(1,1,0,0,0), newobj="lowincome")
ds.table('lowincome') # 0=more than 40% income level 1=40% or below income level
ds.asFactor(input.var.name = 'lowincome', newobj.name = 'flowincome')
ds.dataFrame(x=c('final','flowincome'), newobj='final')
ds.colnames('final')


## max sample size ##
ds.dataFrame(x=c('final$flowincome','final$ext_pc_','final$ext_age_','final$f.cen_dur_cat','final$fam_splitup.0','final$birth_weight','final$sex','final$int_age_','final$age_years','final$child_id','final$int_pc_','final$centre_care','final$agebirth_m_y','final$edu_m_.0','final$femp_cat_mom_0','final$only_child'), check.names=TRUE, stringsAsFactors = TRUE, completeCases=FALSE, newobj="maxsample", datasources = c.data[c('eden', 'generationR', 'dnbc','elfe','alspac')])
ds.dataFrame(x=c('final$flowincome','final$ext_pc_','final$ext_age_','final$f.cen_dur_cat','final$birth_weight','final$sex','final$int_age_','final$age_years','final$child_id','final$int_pc_','final$centre_care','final$agebirth_m_y','final$edu_m_.0','final$femp_cat_mom_0','final$only_child'), check.names=TRUE, stringsAsFactors = TRUE, completeCases=FALSE, newobj="maxsample", datasources = c.data[c('ninfea', "INMA")])

ds.reShape(
  data.name = "maxsample",
  timevar.name = "age_years",
  idvar.name = "child_id",
  v.names = c("int_pc_", "ext_pc_"),
  direction = "wide", 
  newobj = "final_w")

ds.dim('final_w')



#_______________________________________ subset datasets for internalizing behavior sample
##____________________internalizing 
ds.dataFrame(x=c('final$flowincome','final$f.cen_dur_cat','final$fam_splitup.0','final$birth_weight','final$sex','final$int_age_','final$age_years','final$child_id','final$int_pc_','final$centre_care','final$agebirth_m_y','final$edu_m_.0','final$femp_cat_mom_0','final$only_child'), check.names=TRUE, stringsAsFactors = TRUE, completeCases=FALSE, newobj="missinginternal", datasources = c.data[c('eden', 'generationR', 'dnbc','elfe','alspac')])
ds.dataFrame(x=c('final$flowincome','final$f.cen_dur_cat','final$birth_weight','final$sex','final$int_age_','final$age_years','final$child_id','final$int_pc_','final$centre_care','final$agebirth_m_y','final$edu_m_.0','final$femp_cat_mom_0','final$only_child'), check.names=TRUE, stringsAsFactors = TRUE, completeCases=FALSE, newobj="missinginternal", datasources = c.data[c('ninfea', "INMA")])

ds.dim('missinginternal')
ds.colnames('missinginternal')

ds.dataFrameSubset(
  df.name = "missinginternal",
  newobj = "missinginternal_el",
  V1.name = "missinginternal$age_years",
  V2.name = "4",
  Boolean.operator = ">", datasources = c.data
)

ds.dim('missinginternal_el')
ds.colnames('missinginternal_el')

#_____________ create wide subset

ds.reShape(
  data.name = "missinginternal_el",
  timevar.name = "age_years",
  idvar.name = "child_id",
  v.names = c("int_pc_"),
  direction = "wide", 
  newobj = "missinginternal_el_w")

ds.dim('missinginternal_el_w')

#_______________________________________________internalizing exposure
dh.defineCases(
  df = "missinginternal_el", 
  vars = c("centre_care"),
  type = "any", 
  new_obj = "any_exp_int")


ds.length('any_exp_int')
ds.table('any_exp_int')


## ---- Create long subset ---------------------------------------------
ds.dataFrameSubset(
  df.name = "missinginternal_el", 
  V1.name = "any_exp_int", 
  V2.name = "1", 
  Boolean.operator = "==", 
  keep.NAs = FALSE, 
  newobj = "any_exp_int_l")

ds.dim('any_exp_int_l')


#______________________________________internalizing wide format subset
ds.reShape(
  data.name = "any_exp_int_l",
  timevar.name = "age_years",
  idvar.name = "child_id",
  v.names = c("int_pc_"),
  direction = "wide", 
  newobj = "any_exp_int_df_w")

ds.colnames('any_exp_int_df_w')
ds.dim('any_exp_int_df_w')
ds.table('any_exp_int_df_w$centre_care')



#______________________________________internalizing outcome
dh.defineCases(
  df = "any_exp_int_l", 
  vars = c("int_pc"),
  type = "any", 
  new_obj = "any_out_int")

## ---- Create long subset -----------------------------------------------------
ds.dataFrameSubset(
  df.name = "any_exp_int_l", 
  V1.name = "any_out_int", 
  V2.name = "1", 
  Boolean.operator = "==", 
  keep.NAs = FALSE, 
  newobj = "any_out_int_df_l")


## ---- Create wide subset -----------------------------------------------------
ds.reShape(
  data.name = "any_out_int_df_l",
  timevar.name = "age_years",
  idvar.name = "child_id",
  v.names = c("int_pc_"),
  direction = "wide", 
  newobj = "any_out_int_df_w")

ds.dim('any_out_int_df_w')
ds.colnames('any_out_int_df_w')



################################################################################
# All covariates  
################################################################################

## Need to request missing variables
cov.def <- c("flowincome","fam_splitup.0", "agebirth_m_y", "birth_weight", 
             "sex", "edu_m_.0", "femp_cat_mom_0", "only_child")


################# Internalizing behavior for each cohort ##################################
ds.length('any_exp_int_df_w')
ds.colnames('any_exp_int_df_w')

## ---- NINFEA and INMA  -------------------------------------------------------------------
dh.defineCases(
  df = "any_out_int_df_w", 
  vars = cov.def[cov.def != "fam_splitup.0"],
  type = "all", 
  new_obj = "all_cov_int", 
  conns = c.data[c("ninfea", "INMA")])


## ---- Remainder --------------------------------------------------------------
dh.defineCases(
  df = "any_out_int_df_w", 
  vars = cov.def,
  type = "all", 
  new_obj = "all_cov_int", 
  conns = c.data[c("eden", "elfe", "alspac", "dnbc", "generationR")])

ds.length('all_cov_int')
ds.table('all_cov_int')


ds.dataFrameSubset(
  df.name = "any_out_int_df_w", 
  V1.name = "all_cov_int", 
  V2.name = "1", 
  Boolean.operator = "==", 
  keep.NAs = FALSE, 
  newobj = "analysis_df_w_int")

ds.dim('analysis_df_w_int')
ds.colnames('analysis_df_w_int')
#############################
############################# 

# ALSPAC
ds.reShape(
  data.name = "analysis_df_w_int",
  timevar.name = "age_years",
  idvar.name = "child_id",
  varying = c("int_pc_.5","int_pc_.6","int_pc_.7","int_pc_.8", "int_pc_.9", "int_pc_.10", 
              "int_pc_.11","int_pc_.12", "int_pc_.13", "int_pc_.14","int_pc_.16", "int_pc_.17", "int_pc_.18"),
  direction = "long", 
  newobj = "df_int_income_l", 
  datasources=c.data[c("alspac")])
ds.colnames('df_int_income_l', datasources=c.data[c("alspac")])
ds.dim('df_int_income_l', datasources=c.data[c("alspac")])
# Gen R

ds.reShape(
  data.name = "analysis_df_w_int",
  timevar.name = "age_years",
  idvar.name = "child_id",
  varying = c("int_pc_.5","int_pc_.6","int_pc_.7","int_pc_.8", "int_pc_.9", "int_pc_.10", 
              "int_pc_.11","int_pc_.12"),
  direction = "long", 
  newobj = "df_int_income_l", 
  datasources=c.data[c("generationR")])
ds.colnames('df_int_income_l', datasources=c.data[c("generationR")])
ds.dim('df_int_income_l', datasources=c.data[c("generationR")])

# DNBC

ds.reShape(
  data.name = "analysis_df_w_int",
  timevar.name = "age_years",
  idvar.name = "child_id",
  varying = c("int_pc_.7","int_pc_.8", 
              "int_pc_.11","int_pc_.12","int_pc_.13", "int_pc_.14"),
  direction = "long", 
  newobj = "df_int_income_l", 
  datasources=c.data[c("dnbc")])
ds.colnames('df_int_income_l', datasources=c.data[c("dnbc")])
ds.dim('df_int_income_l', datasources=c.data[c("dnbc")])

# eden

ds.reShape(
  data.name = "analysis_df_w_int",
  timevar.name = "age_years",
  idvar.name = "child_id",
  varying = c("int_pc_.5","int_pc_.6","int_pc_.7","int_pc_.8"),
  direction = "long", 
  newobj = "df_int_income_l", 
  datasources=c.data[c("eden")])
ds.colnames('df_int_income_l', datasources=c.data[c("eden")])
ds.dim('df_int_income_l', datasources=c.data[c("eden")])

# elfe

ds.reShape(
  data.name = "analysis_df_w_int",
  timevar.name = "age_years",
  idvar.name = "child_id",
  varying = c("int_pc_.5","int_pc_.6"),
  direction = "long", 
  newobj = "df_int_income_l", 
  datasources=c.data[c("elfe")])
ds.colnames('df_int_income_l', datasources=c.data[c("elfe")])
ds.dim('df_int_income_l', datasources=c.data[c("elfe")])

# INMA

ds.reShape(
  data.name = "analysis_df_w_int",
  timevar.name = "age_years",
  idvar.name = "child_id",
  varying = c("int_pc_.7","int_pc_.8","int_pc_.9", "int_pc_.10", "int_pc_.11", "int_pc_.12"),
  direction = "long", 
  newobj = "df_int_income_l", 
  datasources=c.data[c("INMA")])
ds.colnames('df_int_income_l', datasources=c.data[c("INMA")])
ds.dim('df_int_income_l', datasources=c.data[c("INMA")])

# NINFEA

ds.reShape(
  data.name = "analysis_df_w_int",
  timevar.name = "age_years",
  idvar.name = "child_id",
  varying = "int_pc_.13",
  direction = "long", 
  newobj = "df_int_income_l", 
  datasources=c.data[c("ninfea")])
ds.colnames('df_int_income_l', datasources=c.data[c("ninfea")])
ds.dim('df_int_income_l', datasources=c.data[c("ninfea")])

datashield.workspace_save(c.data, "income_interactions_int")
##### making strata for the interactions

#c.data <- DSI::datashield.login(logins = logindata, restore="income_interactions_int")

ds.asFactor('df_int_income_l$centre_care', newobj.name='f.centre_care')
ds.asFactor('df_int_income_l$flowincome', newobj.name='f.flowincome')
ds.asNumeric('df_int_income_l$int_age_', newobj='n.int_age_')
ds.asNumeric('df_int_income_l$int_age_', newobj='n.int_pc_')
ds.asNumeric('df_int_income_l$age_years', newobj='n.age_years')
ds.asNumeric('df_int_income_l$int_pc_', newobj='n.int_pc_')
ds.asNumeric('df_int_income_l$agebirth_m_y', newobj='n.agebirth_m_y')
ds.asNumeric('df_int_income_l$birth_weight', newobj='n.birth_weight')
ds.asNumeric('df_int_income_l$child_id', newobj='n.child_id')
ds.asFactor('df_int_income_l$only_child', newobj.name='f.only_child')
ds.asFactor('df_int_income_l$sex', newobj.name='f.sex')
ds.asFactor('df_int_income_l$edu_m_.0', newobj.name='f.edu_m_.0')
ds.asFactor('df_int_income_l$fam_splitup.0', newobj.name='f.fam_splitup.0', datasources = c.data[c('alspac', 'generationR', 'dnbc', 'eden', 'elfe')])

# i have to dichotomize this mothers employment so that it can be used for alspac
ds.asNumeric("df_int_income_l$femp_cat_mom_0", newobj = "mom.empl.dich")
ds.table('mom.empl.dich')
ds.Boole(V1="mom.empl.dich", V2='1', Boolean.operator='==', numeric.output=TRUE, newobj="mom.emp.dich")
ds.table('mom.emp.dich') 
ds.asFactor('mom.emp.dich', newobj.name='f.mom.emp.dich')
ds.asFactor('df_int_income_l$femp_cat_mom_0', newobj.name='f.femp_cat_mom_0')
ds.asFactor('df_int_income_l$f.cen_dur_cat', newobj.name='f.cen_dur_cat')

ds.dataFrame(x=c('df_int_income_l',"f.femp_cat_mom_0",  'f.only_child', 'f.centre_care','f.cen_dur_cat','f.flowincome','n.int_age_','n.age_years', 'n.agebirth_m_y', 'n.birth_weight', 'n.child_id', 'f.only_child','f.edu_m_.0', 'f.sex','f.fam_splitup.0', 'n.int_pc_'), newobj='int_income', datasources = c.data[c('generationR', 'dnbc', 'eden', 'elfe')])
ds.dataFrame(x=c('df_int_income_l',"f.femp_cat_mom_0",  'f.only_child', 'f.centre_care','f.cen_dur_cat','f.flowincome','n.int_age_','n.age_years', 'n.agebirth_m_y', 'n.birth_weight', 'n.child_id', 'f.only_child','f.edu_m_.0', 'f.sex', 'n.int_pc_'), newobj='int_income', datasources = c.data[c('ninfea','INMA')])
ds.dataFrame(x=c('df_int_income_l',"f.femp_cat_mom_0", "f.mom.emp.dich", 'f.only_child', 'f.centre_care','f.cen_dur_cat','f.flowincome','n.int_age_','n.age_years', 'n.agebirth_m_y', 'n.birth_weight', 'n.child_id', 'f.only_child','f.edu_m_.0', 'f.sex','f.fam_splitup.0', 'n.int_pc_'), newobj='int_income', datasources = c.data[c('alspac')])

ds.colnames ('int_income')

datashield.workspace_save(c.data, "internal_income_prep")


dh.makeStrata(
  df = "int_income",
  var_to_subset = "n.int_pc_",
  age_var = "n.int_age_", 
  bands = c(5, 7, 7, 10, 10, 13, 13, 18), 
  mult_action = "earliest",
  band_action = "ge_l", 
  keep_vars = c('f.fam_splitup.0',  'f.cen_dur_cat', 'n.agebirth_m_y', 'f.only_child', 'f.sex', 'f.edu_m_.0','f.femp_cat_mom_0', 'f.centre_care', 'n.birth_weight', 'f.flowincome'), 
  id_var = "n.child_id", 
  new_obj = "int_income_strat",
  conns = c.data[c('dnbc', 'eden', 'elfe', 'generationR')])

ds.colnames('int_income_strat', datasources = c.data[c('dnbc', 'eden', 'elfe')])
ds.dim('int_income_strat', datasources = c.data[c('dnbc', 'eden', 'elfe')])


dh.makeStrata(
  df = "int_income",
  var_to_subset = "n.int_pc_",
  age_var = "n.int_age_", 
  bands = c(5, 7, 7, 10, 10, 13, 13, 18), 
  mult_action = "earliest",
  band_action = "ge_l", 
  keep_vars = c('f.fam_splitup.0', 'f.cen_dur_cat', 'n.agebirth_m_y', 'f.only_child', 'f.sex', 'f.edu_m_.0','f.mom.emp.dich', 'f.centre_care', 'n.birth_weight', 'f.flowincome'), 
  id_var = "n.child_id", 
  new_obj = "int_income_strat",
  conns = c.data[c('alspac')])

dh.makeStrata(
  df = "int_income",
  var_to_subset = "n.int_pc_",
  age_var = "n.int_age_", 
  bands = c(5, 7, 7, 10, 10, 13, 13, 18), 
  mult_action = "earliest",
  band_action = "ge_l", 
  keep_vars = c( 'f.cen_dur_cat', 'n.agebirth_m_y', 'f.only_child', 'f.sex', 'f.edu_m_.0','f.femp_cat_mom_0', 'f.centre_care', 'n.birth_weight', 'f.flowincome'), 
  id_var = "n.child_id", 
  new_obj = "int_income_strat",
  conns = c.data[c('ninfea', "INMA")])


datashield.workspace_save(conns = c.data, ws = "internal_income_strata")

###############################################################################
################################################################################ dichotomize income level for interaction tests

c.data <- DSI::datashield.login(logins = logindata, restore="internal_income_strata")
# checking sample sizes
ds.colnames('int_income_strat')
ds.mean('int_income_strat$n.int_pc_.7')
ds.mean('int_income_strat$n.int_pc_.10')
ds.mean('int_income_strat$n.int_pc_.13')
ds.mean('int_income_strat$n.int_pc_.18')
### sub sample for externalizing behavior


c.data <- DSI::datashield.login(logins = logindata, restore="interactions")

ds.colnames('final')
ds.dim('final')

## dichotomize income level for interaction tests
ds.asNumeric("final$eusilc_income_quintiles", newobj='numincome')
ds.table('numincome')
ds.recodeValues(var.name='numincome', values2replace.vector = c(1,2,3,4,5), new.values.vector = c(1,1,0,0,0), newobj="lowincome")
ds.table('lowincome') # 0=more than 40% income level 1=40% or below income level
ds.asFactor(input.var.name = 'lowincome', newobj.name = 'flowincome')
ds.dataFrame(x=c('final','flowincome'), newobj='final')
ds.colnames('final')


## max sample size ##
ds.dataFrame(x=c('final$flowincome','final$ext_pc_','final$ext_age_','final$f.cen_dur_cat','final$fam_splitup.0','final$birth_weight','final$sex','final$ext_age_','final$age_years','final$child_id','final$ext_pc_','final$centre_care','final$agebirth_m_y','final$edu_m_.0','final$femp_cat_mom_0','final$only_child'), check.names=TRUE, stringsAsFactors = TRUE, completeCases=FALSE, newobj="maxsample", datasources = c.data[c('eden', 'generationR', 'dnbc','elfe','alspac')])
ds.dataFrame(x=c('final$flowincome','final$ext_pc_','final$ext_age_','final$f.cen_dur_cat','final$birth_weight','final$sex','final$ext_age_','final$age_years','final$child_id','final$ext_pc_','final$centre_care','final$agebirth_m_y','final$edu_m_.0','final$femp_cat_mom_0','final$only_child'), check.names=TRUE, stringsAsFactors = TRUE, completeCases=FALSE, newobj="maxsample", datasources = c.data[c('ninfea', "INMA")])

ds.reShape(
  data.name = "maxsample",
  timevar.name = "age_years",
  idvar.name = "child_id",
  v.names = c("ext_pc_", "ext_pc_"),
  direction = "wide", 
  newobj = "final_w")

ds.dim('final_w')

#_______________________________________ subset datasets for externalizing behavior sample
##____________________externalizing 

ds.dataFrame(x=c('final$flowincome','final$f.cen_dur_cat','final$fam_splitup.0','final$birth_weight','final$sex','final$ext_age_','final$age_years','final$child_id','final$ext_pc_','final$centre_care','final$agebirth_m_y','final$edu_m_.0','final$femp_cat_mom_0','final$only_child'), check.names=TRUE, stringsAsFactors = TRUE, completeCases=FALSE, newobj="missingexternal", datasources = c.data[c('eden', 'generationR', 'dnbc','elfe','alspac')])
ds.dataFrame(x=c('final$flowincome','final$f.cen_dur_cat','final$birth_weight','final$sex','final$ext_age_','final$age_years','final$child_id','final$ext_pc_','final$centre_care','final$agebirth_m_y','final$edu_m_.0','final$femp_cat_mom_0','final$only_child'), check.names=TRUE, stringsAsFactors = TRUE, completeCases=FALSE, newobj="missingexternal", datasources = c.data[c('ninfea', "INMA")])

ds.dim('missingexternal')
ds.colnames('missingexternal')

ds.dataFrameSubset(
  df.name = "missingexternal",
  newobj = "missingexternal_el",
  V1.name = "missingexternal$age_years",
  V2.name = "4",
  Boolean.operator = ">", datasources = c.data
)

ds.dim('missingexternal_el')
ds.colnames('missingexternal_el')

#_____________ create wide subset

ds.reShape(
  data.name = "missingexternal_el",
  timevar.name = "age_years",
  idvar.name = "child_id",
  v.names = c("ext_pc_"),
  direction = "wide", 
  newobj = "missingexternal_el_w")

ds.dim('missingexternal_el_w')

#_______________________________________________externalizing exposure
dh.defineCases(
  df = "missingexternal_el", 
  vars = c("centre_care"),
  type = "any", 
  new_obj = "any_exp_ext")


ds.length('any_exp_ext')
ds.table('any_exp_ext')


## ---- Create long subset ---------------------------------------------
ds.dataFrameSubset(
  df.name = "missingexternal_el", 
  V1.name = "any_exp_ext", 
  V2.name = "1", 
  Boolean.operator = "==", 
  keep.NAs = FALSE, 
  newobj = "any_exp_ext_l")

ds.dim('any_exp_ext_l')


#______________________________________externalizing wide format subset
ds.reShape(
  data.name = "any_exp_ext_l",
  timevar.name = "age_years",
  idvar.name = "child_id",
  v.names = c("ext_pc_"),
  direction = "wide", 
  newobj = "any_exp_ext_df_w")

ds.colnames('any_exp_ext_df_w')
ds.dim('any_exp_ext_df_w')
ds.table('any_exp_ext_df_w$centre_care')



#______________________________________externalizing outcome
dh.defineCases(
  df = "any_exp_ext_l", 
  vars = c("ext_pc"),
  type = "any", 
  new_obj = "any_out_ext")

## ---- Create long subset -----------------------------------------------------
ds.dataFrameSubset(
  df.name = "any_exp_ext_l", 
  V1.name = "any_out_ext", 
  V2.name = "1", 
  Boolean.operator = "==", 
  keep.NAs = FALSE, 
  newobj = "any_out_ext_df_l")


## ---- Create wide subset -----------------------------------------------------
ds.reShape(
  data.name = "any_out_ext_df_l",
  timevar.name = "age_years",
  idvar.name = "child_id",
  v.names = c("ext_pc_"),
  direction = "wide", 
  newobj = "any_out_ext_df_w")

ds.dim('any_out_ext_df_w')
ds.colnames('any_out_ext_df_w')



################################################################################
# All covariates  
################################################################################

## Need to request missing variables
cov.def <- c("flowincome","fam_splitup.0", "agebirth_m_y", "birth_weight", 
             "sex", "edu_m_.0", "femp_cat_mom_0", "only_child")


################# externalizing behavior for each cohort ##################################
ds.length('any_exp_ext_df_w')
ds.colnames('any_exp_ext_df_w')

## ---- NINFEA and INMA  -------------------------------------------------------------------
dh.defineCases(
  df = "any_out_ext_df_w", 
  vars = cov.def[cov.def != "fam_splitup.0"],
  type = "all", 
  new_obj = "all_cov_ext", 
  conns = c.data[c("ninfea", "INMA")])


## ---- Remainder --------------------------------------------------------------
dh.defineCases(
  df = "any_out_ext_df_w", 
  vars = cov.def,
  type = "all", 
  new_obj = "all_cov_ext", 
  conns = c.data[c("eden", "elfe", "alspac", "dnbc", "generationR")])

ds.length('all_cov_ext')
ds.table('all_cov_ext')


ds.dataFrameSubset(
  df.name = "any_out_ext_df_w", 
  V1.name = "all_cov_ext", 
  V2.name = "1", 
  Boolean.operator = "==", 
  keep.NAs = FALSE, 
  newobj = "analysis_df_w_ext")

ds.dim('analysis_df_w_ext')
ds.colnames('analysis_df_w_ext')
#############################
############################# 

# ALSPAC
ds.reShape(
  data.name = "analysis_df_w_ext",
  timevar.name = "age_years",
  idvar.name = "child_id",
  varying = c("ext_pc_.5","ext_pc_.6","ext_pc_.7","ext_pc_.8", "ext_pc_.9", "ext_pc_.10", 
              "ext_pc_.11","ext_pc_.12", "ext_pc_.13", "ext_pc_.14","ext_pc_.16", "ext_pc_.17", "ext_pc_.18"),
  direction = "long", 
  newobj = "df_ext_income_l", 
  datasources=c.data[c("alspac")])
ds.colnames('df_ext_income_l', datasources=c.data[c("alspac")])
ds.dim('df_ext_income_l', datasources=c.data[c("alspac")])
# Gen R

ds.reShape(
  data.name = "analysis_df_w_ext",
  timevar.name = "age_years",
  idvar.name = "child_id",
  varying = c("ext_pc_.5","ext_pc_.6","ext_pc_.7","ext_pc_.8", "ext_pc_.9", "ext_pc_.10", 
              "ext_pc_.11","ext_pc_.12"),
  direction = "long", 
  newobj = "df_ext_income_l", 
  datasources=c.data[c("generationR")])
ds.colnames('df_ext_income_l', datasources=c.data[c("generationR")])
ds.dim('df_ext_income_l', datasources=c.data[c("generationR")])

# DNBC

ds.reShape(
  data.name = "analysis_df_w_ext",
  timevar.name = "age_years",
  idvar.name = "child_id",
  varying = c("ext_pc_.7","ext_pc_.8", 
              "ext_pc_.11","ext_pc_.12","ext_pc_.13", "ext_pc_.14"),
  direction = "long", 
  newobj = "df_ext_income_l", 
  datasources=c.data[c("dnbc")])
ds.colnames('df_ext_income_l', datasources=c.data[c("dnbc")])
ds.dim('df_ext_income_l', datasources=c.data[c("dnbc")])

# eden

ds.reShape(
  data.name = "analysis_df_w_ext",
  timevar.name = "age_years",
  idvar.name = "child_id",
  varying = c("ext_pc_.5","ext_pc_.6","ext_pc_.7","ext_pc_.8"),
  direction = "long", 
  newobj = "df_ext_income_l", 
  datasources=c.data[c("eden")])
ds.colnames('df_ext_income_l', datasources=c.data[c("eden")])
ds.dim('df_ext_income_l', datasources=c.data[c("eden")])

# elfe

ds.reShape(
  data.name = "analysis_df_w_ext",
  timevar.name = "age_years",
  idvar.name = "child_id",
  varying = c("ext_pc_.5","ext_pc_.6"),
  direction = "long", 
  newobj = "df_ext_income_l", 
  datasources=c.data[c("elfe")])
ds.colnames('df_ext_income_l', datasources=c.data[c("elfe")])
ds.dim('df_ext_income_l', datasources=c.data[c("elfe")])

# INMA

ds.reShape(
  data.name = "analysis_df_w_ext",
  timevar.name = "age_years",
  idvar.name = "child_id",
  varying = c("ext_pc_.7","ext_pc_.8","ext_pc_.9", "ext_pc_.10", "ext_pc_.11", "ext_pc_.12"),
  direction = "long", 
  newobj = "df_ext_income_l", 
  datasources=c.data[c("INMA")])
ds.colnames('df_ext_income_l', datasources=c.data[c("INMA")])
ds.dim('df_ext_income_l', datasources=c.data[c("INMA")])

# NINFEA

ds.reShape(
  data.name = "analysis_df_w_ext",
  timevar.name = "age_years",
  idvar.name = "child_id",
  varying = "ext_pc_.13",
  direction = "long", 
  newobj = "df_ext_income_l", 
  datasources=c.data[c("ninfea")])
ds.colnames('df_ext_income_l', datasources=c.data[c("ninfea")])
ds.dim('df_ext_income_l', datasources=c.data[c("ninfea")])

datashield.workspace_save(conns = c.data, ws ="income_interactions_ext")

# externalizing behavior and household monthly income prep

ds.asFactor('df_ext_income_l$centre_care', newobj.name='f.centre_care')
ds.asFactor('df_ext_income_l$flowincome', newobj.name='f.flowincome')
ds.asNumeric('df_ext_income_l$ext_age_', newobj='n.ext_age_')
ds.asNumeric('df_ext_income_l$ext_age_', newobj='n.ext_pc_')
ds.asNumeric('df_ext_income_l$age_years', newobj='n.age_years')
ds.asNumeric('df_ext_income_l$ext_pc_', newobj='n.ext_pc_')
ds.asNumeric('df_ext_income_l$agebirth_m_y', newobj='n.agebirth_m_y')
ds.asNumeric('df_ext_income_l$birth_weight', newobj='n.birth_weight')
ds.asNumeric('df_ext_income_l$child_id', newobj='n.child_id')
ds.asFactor('df_ext_income_l$only_child', newobj.name='f.only_child')
ds.asFactor('df_ext_income_l$sex', newobj.name='f.sex')
ds.asFactor('df_ext_income_l$edu_m_.0', newobj.name='f.edu_m_.0')
ds.asFactor('df_ext_income_l$fam_splitup.0', newobj.name='f.fam_splitup.0', datasources = c.data[c('alspac', 'generationR', 'dnbc', 'eden', 'elfe')])

# i have to dichotomize this mothers employment so that it can be used for alspac
ds.asNumeric("df_ext_income_l$femp_cat_mom_0", newobj = "mom.empl.dich")
ds.table('mom.empl.dich')
ds.Boole(V1="mom.empl.dich", V2='1', Boolean.operator='==', numeric.output=TRUE, newobj="mom.emp.dich")
ds.table('mom.emp.dich') 
ds.asFactor('mom.emp.dich', newobj.name='f.mom.emp.dich')
ds.asFactor('df_ext_income_l$femp_cat_mom_0', newobj.name='f.femp_cat_mom_0')
ds.asFactor('df_ext_income_l$f.cen_dur_cat', newobj.name='f.cen_dur_cat')

ds.dataFrame(x=c('df_ext_income_l',"f.femp_cat_mom_0",  'f.only_child', 'f.centre_care','f.cen_dur_cat','f.flowincome','n.ext_age_','n.age_years', 'n.agebirth_m_y', 'n.birth_weight', 'n.child_id', 'f.only_child','f.edu_m_.0', 'f.sex','f.fam_splitup.0', 'n.ext_pc_'), newobj='ext_income', datasources = c.data[c('generationR', 'dnbc', 'eden', 'elfe')])
ds.dataFrame(x=c('df_ext_income_l',"f.femp_cat_mom_0",  'f.only_child', 'f.centre_care','f.cen_dur_cat','f.flowincome','n.ext_age_','n.age_years', 'n.agebirth_m_y', 'n.birth_weight', 'n.child_id', 'f.only_child','f.edu_m_.0', 'f.sex', 'n.ext_pc_'), newobj='ext_income', datasources = c.data[c('ninfea','INMA')])
ds.dataFrame(x=c('df_ext_income_l',"f.femp_cat_mom_0", "f.mom.emp.dich", 'f.only_child', 'f.centre_care','f.cen_dur_cat','f.flowincome','n.ext_age_','n.age_years', 'n.agebirth_m_y', 'n.birth_weight', 'n.child_id', 'f.only_child','f.edu_m_.0', 'f.sex','f.fam_splitup.0', 'n.ext_pc_'), newobj='ext_income', datasources = c.data[c('alspac')])

ds.colnames ('ext_income')

datashield.workspace_save(c.data, "external_income_prep")


dh.makeStrata(
  df = "ext_income",
  var_to_subset = "n.ext_pc_",
  age_var = "n.ext_age_", 
  bands = c(5, 7, 7, 10, 10, 13, 13, 18), 
  mult_action = "earliest",
  band_action = "ge_l", 
  keep_vars = c('f.fam_splitup.0',  'f.cen_dur_cat', 'n.agebirth_m_y', 'f.only_child', 'f.sex', 'f.edu_m_.0','f.femp_cat_mom_0', 'f.centre_care', 'n.birth_weight', 'f.flowincome'), 
  id_var = "n.child_id", 
  new_obj = "ext_income_strat",
  conns = c.data[c('dnbc', 'eden', 'elfe', 'generationR')])

ds.colnames('ext_income_strat', datasources = c.data[c('dnbc', 'eden', 'elfe')])
ds.dim('ext_income_strat', datasources = c.data[c('dnbc', 'eden', 'elfe')])


dh.makeStrata(
  df = "ext_income",
  var_to_subset = "n.ext_pc_",
  age_var = "n.ext_age_", 
  bands = c(5, 7, 7, 10, 10, 13, 13, 18), 
  mult_action = "earliest",
  band_action = "ge_l", 
  keep_vars = c('f.fam_splitup.0', 'f.cen_dur_cat', 'n.agebirth_m_y', 'f.only_child', 'f.sex', 'f.edu_m_.0','f.mom.emp.dich', 'f.centre_care', 'n.birth_weight', 'f.flowincome'), 
  id_var = "n.child_id", 
  new_obj = "ext_income_strat",
  conns = c.data[c('alspac')])

dh.makeStrata(
  df = "ext_income",
  var_to_subset = "n.ext_pc_",
  age_var = "n.ext_age_", 
  bands = c(5, 7, 7, 10, 10, 13, 13, 18), 
  mult_action = "earliest",
  band_action = "ge_l", 
  keep_vars = c( 'f.cen_dur_cat', 'n.agebirth_m_y', 'f.only_child', 'f.sex', 'f.edu_m_.0','f.femp_cat_mom_0', 'f.centre_care', 'n.birth_weight', 'f.flowincome'), 
  id_var = "n.child_id", 
  new_obj = "ext_income_strat",
  conns = c.data[c('ninfea', "INMA")])


datashield.workspace_save(conns = c.data, ws = "external_income_strata")


#### create datasets to check mothers post partum depression


## not available in INMA nor NINFEA (low cell count) dataset


#### internalizing behavior and ppd in mothers datasets



c.data <- DSI::datashield.login(logins = logindata, restore="interactions")


#### internalizing behavior

## max sample size ##
ds.dataFrame(x=c('final$ppd','final$ext_pc_','final$ext_age_','final$f.cen_dur_cat','final$fam_splitup.0','final$birth_weight','final$sex','final$int_age_','final$age_years','final$child_id','final$int_pc_','final$centre_care','final$agebirth_m_y','final$edu_m_.0','final$femp_cat_mom_0','final$only_child'), check.names=TRUE, stringsAsFactors = TRUE, completeCases=FALSE, newobj="maxsample", datasources = c.data[c('eden', 'generationR', 'dnbc','elfe','alspac')])

ds.reShape(
  data.name = "maxsample",
  timevar.name = "age_years",
  idvar.name = "child_id",
  v.names = c("int_pc_", "ext_pc_"),
  direction = "wide", 
  newobj = "final_w")

ds.dim('final_w')



#_______________________________________ subset datasets for internalizing behavior sample
##____________________internalizing 
ds.dataFrame(x=c('final$ppd','final$f.cen_dur_cat','final$fam_splitup.0','final$birth_weight','final$sex','final$int_age_','final$age_years','final$child_id','final$int_pc_','final$centre_care','final$agebirth_m_y','final$edu_m_.0','final$femp_cat_mom_0','final$only_child'), check.names=TRUE, stringsAsFactors = TRUE, completeCases=FALSE, newobj="missinginternal", datasources = c.data[c('eden', 'generationR', 'dnbc','elfe','alspac')])

ds.dim('missinginternal')
ds.colnames('missinginternal')

ds.dataFrameSubset(
  df.name = "missinginternal",
  newobj = "missinginternal_el",
  V1.name = "missinginternal$age_years",
  V2.name = "4",
  Boolean.operator = ">", datasources = c.data
)

ds.dim('missinginternal_el')
ds.colnames('missinginternal_el')

#_____________ create wide subset

ds.reShape(
  data.name = "missinginternal_el",
  timevar.name = "age_years",
  idvar.name = "child_id",
  v.names = c("int_pc_"),
  direction = "wide", 
  newobj = "missinginternal_el_w")

ds.dim('missinginternal_el_w')

#_______________________________________________internalizing exposure
dh.defineCases(
  df = "missinginternal_el", 
  vars = c("centre_care"),
  type = "any", 
  new_obj = "any_exp_int")


ds.length('any_exp_int')
ds.table('any_exp_int')


## ---- Create long subset ---------------------------------------------
ds.dataFrameSubset(
  df.name = "missinginternal_el", 
  V1.name = "any_exp_int", 
  V2.name = "1", 
  Boolean.operator = "==", 
  keep.NAs = FALSE, 
  newobj = "any_exp_int_l")

ds.dim('any_exp_int_l')


#______________________________________internalizing wide format subset
ds.reShape(
  data.name = "any_exp_int_l",
  timevar.name = "age_years",
  idvar.name = "child_id",
  v.names = c("int_pc_"),
  direction = "wide", 
  newobj = "any_exp_int_df_w")

ds.colnames('any_exp_int_df_w')
ds.dim('any_exp_int_df_w')
ds.table('any_exp_int_df_w$centre_care')



#______________________________________internalizing outcome
dh.defineCases(
  df = "any_exp_int_l", 
  vars = c("int_pc"),
  type = "any", 
  new_obj = "any_out_int")

## ---- Create long subset -----------------------------------------------------
ds.dataFrameSubset(
  df.name = "any_exp_int_l", 
  V1.name = "any_out_int", 
  V2.name = "1", 
  Boolean.operator = "==", 
  keep.NAs = FALSE, 
  newobj = "any_out_int_df_l")


## ---- Create wide subset -----------------------------------------------------
ds.reShape(
  data.name = "any_out_int_df_l",
  timevar.name = "age_years",
  idvar.name = "child_id",
  v.names = c("int_pc_"),
  direction = "wide", 
  newobj = "any_out_int_df_w")

ds.dim('any_out_int_df_w')
ds.colnames('any_out_int_df_w')



################################################################################
# All covariates  
################################################################################

## Need to request missing variables
cov.def <- c("ppd","fam_splitup.0", "agebirth_m_y", "birth_weight", 
             "sex", "edu_m_.0", "femp_cat_mom_0", "only_child")


################# Internalizing behavior for each cohort ##################################
ds.length('any_exp_int_df_w')
ds.colnames('any_exp_int_df_w')



## ---- cohorts --------------------------------------------------------------
dh.defineCases(
  df = "any_out_int_df_w", 
  vars = cov.def,
  type = "all", 
  new_obj = "all_cov_int", 
  conns = c.data[c("eden", "elfe", "alspac", "dnbc", "generationR")])

ds.length('all_cov_int')
ds.table('all_cov_int')


ds.dataFrameSubset(
  df.name = "any_out_int_df_w", 
  V1.name = "all_cov_int", 
  V2.name = "1", 
  Boolean.operator = "==", 
  keep.NAs = FALSE, 
  newobj = "analysis_df_w_int",datasources = c.data[c("eden", "elfe", "alspac", "dnbc", "generationR")])

ds.dim('analysis_df_w_int')
ds.colnames('analysis_df_w_int')
#############################
############################# 

# ALSPAC
ds.reShape(
  data.name = "analysis_df_w_int",
  timevar.name = "age_years",
  idvar.name = "child_id",
  varying = c("int_pc_.5","int_pc_.6","int_pc_.7","int_pc_.8", "int_pc_.9", "int_pc_.10", 
              "int_pc_.11","int_pc_.12", "int_pc_.13", "int_pc_.14","int_pc_.16", "int_pc_.17", "int_pc_.18"),
  direction = "long", 
  newobj = "df_int_ppd_l", 
  datasources=c.data[c("alspac")])
ds.colnames('df_int_ppd_l', datasources=c.data[c("alspac")])
ds.dim('df_int_ppd_l', datasources=c.data[c("alspac")])
# Gen R

ds.reShape(
  data.name = "analysis_df_w_int",
  timevar.name = "age_years",
  idvar.name = "child_id",
  varying = c("int_pc_.5","int_pc_.6","int_pc_.7","int_pc_.8", "int_pc_.9", "int_pc_.10", 
              "int_pc_.11","int_pc_.12"),
  direction = "long", 
  newobj = "df_int_ppd_l", 
  datasources=c.data[c("generationR")])
ds.colnames('df_int_ppd_l', datasources=c.data[c("generationR")])
ds.dim('df_int_ppd_l', datasources=c.data[c("generationR")])

# DNBC

ds.reShape(
  data.name = "analysis_df_w_int",
  timevar.name = "age_years",
  idvar.name = "child_id",
  varying = c("int_pc_.7","int_pc_.8", 
              "int_pc_.11","int_pc_.12","int_pc_.13", "int_pc_.14"),
  direction = "long", 
  newobj = "df_int_ppd_l", 
  datasources=c.data[c("dnbc")])
ds.colnames('df_int_ppd_l', datasources=c.data[c("dnbc")])
ds.dim('df_int_ppd_l', datasources=c.data[c("dnbc")])

# eden

ds.reShape(
  data.name = "analysis_df_w_int",
  timevar.name = "age_years",
  idvar.name = "child_id",
  varying = c("int_pc_.5","int_pc_.6","int_pc_.7","int_pc_.8"),
  direction = "long", 
  newobj = "df_int_ppd_l", 
  datasources=c.data[c("eden")])
ds.colnames('df_int_ppd_l', datasources=c.data[c("eden")])
ds.dim('df_int_ppd_l', datasources=c.data[c("eden")])

# elfe

ds.reShape(
  data.name = "analysis_df_w_int",
  timevar.name = "age_years",
  idvar.name = "child_id",
  varying = c("int_pc_.5","int_pc_.6"),
  direction = "long", 
  newobj = "df_int_ppd_l", 
  datasources=c.data[c("elfe")])
ds.colnames('df_int_ppd_l', datasources=c.data[c("elfe")])
ds.dim('df_int_ppd_l', datasources=c.data[c("elfe")])

datashield.workspace_save(c.data, "ppd_interactions_int")

##### making strata for the interactions


ds.asFactor('df_int_ppd_l$centre_care', newobj.name='f.centre_care')
ds.asFactor('df_int_ppd_l$flowincome', newobj.name='f.flowincome')
ds.asNumeric('df_int_ppd_l$int_age_', newobj='n.int_age_')
ds.asNumeric('df_int_ppd_l$age_years', newobj='n.age_years')
ds.asNumeric('df_int_ppd_l$int_pc_', newobj='n.int_pc_')
ds.asNumeric('df_int_ppd_l$agebirth_m_y', newobj='n.agebirth_m_y')
ds.asNumeric('df_int_ppd_l$birth_weight', newobj='n.birth_weight')
ds.asNumeric('df_int_ppd_l$child_id', newobj='n.child_id')
ds.asFactor('df_int_ppd_l$only_child', newobj.name='f.only_child')
ds.asFactor('df_int_ppd_l$sex', newobj.name='f.sex')
ds.asFactor('df_int_ppd_l$edu_m_.0', newobj.name='f.edu_m_.0')
ds.asFactor('df_int_ppd_l$fam_splitup.0', newobj.name='f.fam_splitup.0', datasources = c.data[c('alspac', 'generationR', 'dnbc', 'eden', 'elfe')])
# i have to dichotomize this mothers employment so that it can be used for alspac
ds.asNumeric("df_int_ppd_l$femp_cat_mom_0", newobj = "mom.empl.dich")
ds.table('mom.empl.dich')
ds.Boole(V1="mom.empl.dich", V2='1', Boolean.operator='==', numeric.output=TRUE, newobj="mom.emp.dich")
ds.table('mom.emp.dich') 
ds.asFactor('mom.emp.dich', newobj.name='f.mom.emp.dich')
ds.asFactor('df_int_ppd_l$femp_cat_mom_0', newobj.name='f.femp_cat_mom_0')
ds.asFactor('df_int_ppd_l$f.cen_dur_cat', newobj.name='f.cen_dur_cat')
ds.asFactor('df_int_ppd_l$ppd', newobj.name='f.ppd')


ds.dataFrame(x=c('df_int_ppd_l',"f.femp_cat_mom_0",  'n.int_pc_','f.only_child', 'f.centre_care','f.cen_dur_cat','f.ppd','n.int_age_','n.age_years', 'n.agebirth_m_y', 'n.birth_weight', 'n.child_id', 'f.only_child','f.edu_m_.0', 'f.sex','f.fam_splitup.0'), newobj='int_ppdmother', datasources = c.data[c('generationR', 'dnbc', 'eden', 'elfe')])
ds.dataFrame(x=c('df_int_ppd_l',"f.femp_cat_mom_0", 'n.int_pc_',"f.mom.emp.dich", 'f.only_child', 'f.centre_care','f.cen_dur_cat','f.ppd','n.int_age_','n.age_years', 'n.agebirth_m_y', 'n.birth_weight', 'n.child_id', 'f.only_child','f.edu_m_.0', 'f.sex','f.fam_splitup.0'), newobj='int_ppdmother', datasources = c.data[c('alspac')])

datashield.workspace_save(c.data, "ppd_data_prep")

dh.makeStrata(
  df = "int_ppdmother",
  var_to_subset = "n.int_pc_",
  age_var = "n.int_age_", 
  bands = c(5, 7, 7, 10, 10, 13, 13, 18), 
  mult_action = "earliest",
  band_action = "ge_l", 
  keep_vars = c('f.fam_splitup.0',  'f.cen_dur_cat', 'n.agebirth_m_y', 'f.only_child', 'f.sex', 'f.edu_m_.0','f.mom.emp.dich', 'f.centre_care', 'n.birth_weight', 'f.ppd'), 
  id_var = "n.child_id", 
  new_obj = "int_ppdmother_strat",
  conns = c.data[c('alspac')])

dh.makeStrata(
  df = "int_ppdmother",
  var_to_subset = "n.int_pc_",
  age_var = "n.int_age_", 
  bands = c(5, 7, 7, 10, 10, 13, 13, 18), 
  mult_action = "earliest",
  band_action = "ge_l", 
  keep_vars = c('f.fam_splitup.0',  'f.cen_dur_cat', 'n.agebirth_m_y', 'f.only_child', 'f.sex', 'f.edu_m_.0','f.femp_cat_mom_0', 'f.centre_care', 'n.birth_weight', 'f.ppd'), 
  id_var = "n.child_id", 
  new_obj = "int_ppdmother_strat",
  conns = c.data[c("generationR", "dnbc", 'elfe', 'eden')])

dh.makeStrata(
  df = "int_ppdmother",
  var_to_subset = "n.int_pc_",
  age_var = "n.int_age_", 
  bands = c(5, 7, 7, 10, 10, 13, 13, 18), 
  mult_action = "earliest",
  band_action = "ge_l", 
  keep_vars = c('f.cen_dur_cat', 'n.agebirth_m_y', 'f.only_child', 'f.sex', 'f.edu_m_.0','f.femp_cat_mom_0', 'f.centre_care', 'n.birth_weight', 'f.ppd'), 
  id_var = "n.child_id", 
  new_obj = "int_ppdmother_strat",
  conns = c.data[c('ninfea')])

ds.dim('int_ppdmother_strat', c.data[c("generationR", "dnbc", 'elfe', 'eden')])

datashield.workspace_save(c.data, "ppd_int_strata")


#_______________________________________ subset datasets for externalizing behavior sample
##____________________externalizing 

library(DSMolgenisArmadillo)
library(dsBaseClient)
library(dsHelper)
library(DSI)
library(DSOpal)
library('stringr')
#login to all cohorts

c.data <- DSI::datashield.login(logins = logindata, restore="interactions")


ds.dataFrame(x=c('final$ppd','final$f.cen_dur_cat','final$fam_splitup.0','final$birth_weight','final$sex','final$ext_age_','final$age_years','final$child_id','final$ext_pc_','final$centre_care','final$agebirth_m_y','final$edu_m_.0','final$femp_cat_mom_0','final$only_child'), check.names=TRUE, stringsAsFactors = TRUE, completeCases=FALSE, newobj="missingexternal", datasources = c.data[c('eden', 'generationR', 'dnbc','elfe','alspac')])

ds.dim('missingexternal')
ds.colnames('missingexternal')

ds.dataFrameSubset(
  df.name = "missingexternal",
  newobj = "missingexternal_el",
  V1.name = "missingexternal$age_years",
  V2.name = "4",
  Boolean.operator = ">", datasources = c.data
)

ds.dim('missingexternal_el')
ds.colnames('missingexternal_el')

#_____________ create wide subset

ds.reShape(
  data.name = "missingexternal_el",
  timevar.name = "age_years",
  idvar.name = "child_id",
  v.names = c("ext_pc_"),
  direction = "wide", 
  newobj = "missingexternal_el_w")

ds.dim('missingexternal_el_w')

#_______________________________________________externalizing exposure
dh.defineCases(
  df = "missingexternal_el", 
  vars = c("centre_care"),
  type = "any", 
  new_obj = "any_exp_ext")


ds.length('any_exp_ext')
ds.table('any_exp_ext')


## ---- Create long subset ---------------------------------------------
ds.dataFrameSubset(
  df.name = "missingexternal_el", 
  V1.name = "any_exp_ext", 
  V2.name = "1", 
  Boolean.operator = "==", 
  keep.NAs = FALSE, 
  newobj = "any_exp_ext_l")

ds.dim('any_exp_ext_l')


#______________________________________externalizing wide format subset
ds.reShape(
  data.name = "any_exp_ext_l",
  timevar.name = "age_years",
  idvar.name = "child_id",
  v.names = c("ext_pc_"),
  direction = "wide", 
  newobj = "any_exp_ext_df_w")

ds.colnames('any_exp_ext_df_w')
ds.dim('any_exp_ext_df_w')
ds.table('any_exp_ext_df_w$centre_care')



#______________________________________externalizing outcome
dh.defineCases(
  df = "any_exp_ext_l", 
  vars = c("ext_pc"),
  type = "any", 
  new_obj = "any_out_ext")

## ---- Create long subset -----------------------------------------------------
ds.dataFrameSubset(
  df.name = "any_exp_ext_l", 
  V1.name = "any_out_ext", 
  V2.name = "1", 
  Boolean.operator = "==", 
  keep.NAs = FALSE, 
  newobj = "any_out_ext_df_l")


## ---- Create wide subset -----------------------------------------------------
ds.reShape(
  data.name = "any_out_ext_df_l",
  timevar.name = "age_years",
  idvar.name = "child_id",
  v.names = c("ext_pc_"),
  direction = "wide", 
  newobj = "any_out_ext_df_w")

ds.dim('any_out_ext_df_w')
ds.colnames('any_out_ext_df_w')



################################################################################
# All covariates  
################################################################################

## Need to request missing variables
cov.def <- c("ppd","fam_splitup.0", "agebirth_m_y", "birth_weight", 
             "sex", "edu_m_.0", "femp_cat_mom_0", "only_child")


################# externalizing behavior for each cohort ##################################
ds.length('any_exp_ext_df_w')
ds.colnames('any_exp_ext_df_w')



## ---- cohorts --------------------------------------------------------------
dh.defineCases(
  df = "any_out_ext_df_w", 
  vars = cov.def,
  type = "all", 
  new_obj = "all_cov_ext", 
  conns = c.data[c("eden", "elfe", "alspac", "dnbc", "generationR")])

ds.length('all_cov_ext')
ds.table('all_cov_ext')


ds.dataFrameSubset(
  df.name = "any_out_ext_df_w", 
  V1.name = "all_cov_ext", 
  V2.name = "1", 
  Boolean.operator = "==", 
  keep.NAs = FALSE, 
  newobj = "analysis_df_w_ext")

ds.dim('analysis_df_w_ext')
ds.colnames('analysis_df_w_ext')
#############################
############################# 

# ALSPAC
ds.reShape(
  data.name = "analysis_df_w_ext",
  timevar.name = "age_years",
  idvar.name = "child_id",
  varying = c("ext_pc_.5","ext_pc_.6","ext_pc_.7","ext_pc_.8", "ext_pc_.9", "ext_pc_.10", 
              "ext_pc_.11","ext_pc_.12", "ext_pc_.13", "ext_pc_.14","ext_pc_.16", "ext_pc_.17", "ext_pc_.18"),
  direction = "long", 
  newobj = "df_ext_ppd_l", 
  datasources=c.data[c("alspac")])
ds.colnames('df_ext_ppd_l', datasources=c.data[c("alspac")])
ds.dim('df_ext_ppd_l', datasources=c.data[c("alspac")])
# Gen R

ds.reShape(
  data.name = "analysis_df_w_ext",
  timevar.name = "age_years",
  idvar.name = "child_id",
  varying = c("ext_pc_.5","ext_pc_.6","ext_pc_.7","ext_pc_.8", "ext_pc_.9", "ext_pc_.10", 
              "ext_pc_.11","ext_pc_.12"),
  direction = "long", 
  newobj = "df_ext_ppd_l", 
  datasources=c.data[c("generationR")])
ds.colnames('df_ext_ppd_l', datasources=c.data[c("generationR")])
ds.dim('df_ext_ppd_l', datasources=c.data[c("generationR")])

# DNBC

ds.reShape(
  data.name = "analysis_df_w_ext",
  timevar.name = "age_years",
  idvar.name = "child_id",
  varying = c("ext_pc_.7","ext_pc_.8", 
              "ext_pc_.11","ext_pc_.12","ext_pc_.13", "ext_pc_.14"),
  direction = "long", 
  newobj = "df_ext_ppd_l", 
  datasources=c.data[c("dnbc")])
ds.colnames('df_ext_ppd_l', datasources=c.data[c("dnbc")])
ds.dim('df_ext_ppd_l', datasources=c.data[c("dnbc")])

# eden

ds.reShape(
  data.name = "analysis_df_w_ext",
  timevar.name = "age_years",
  idvar.name = "child_id",
  varying = c("ext_pc_.5","ext_pc_.6","ext_pc_.7","ext_pc_.8"),
  direction = "long", 
  newobj = "df_ext_ppd_l", 
  datasources=c.data[c("eden")])
ds.colnames('df_ext_ppd_l', datasources=c.data[c("eden")])
ds.dim('df_ext_ppd_l', datasources=c.data[c("eden")])

# elfe

ds.reShape(
  data.name = "analysis_df_w_ext",
  timevar.name = "age_years",
  idvar.name = "child_id",
  varying = c("ext_pc_.5","ext_pc_.6"),
  direction = "long", 
  newobj = "df_ext_ppd_l", 
  datasources=c.data[c("elfe")])
ds.colnames('df_ext_ppd_l', datasources=c.data[c("elfe")])
ds.dim('df_ext_ppd_l', datasources=c.data[c("elfe")])

datashield.workspace_save(c.data, "ppd_exteractions_ext")

#### create strata for ppd and externalizing behavior

ds.asFactor('df_ext_ppd_l$centre_care', newobj.name='f.centre_care')
ds.asFactor('df_ext_ppd_l$flowincome', newobj.name='f.flowincome')
ds.asNumeric('df_ext_ppd_l$ext_age_', newobj='n.ext_age_')
ds.asNumeric('df_ext_ppd_l$age_years', newobj='n.age_years')
ds.asNumeric('df_ext_ppd_l$ext_pc_', newobj='n.ext_pc_')
ds.asNumeric('df_ext_ppd_l$agebirth_m_y', newobj='n.agebirth_m_y')
ds.asNumeric('df_ext_ppd_l$birth_weight', newobj='n.birth_weight')
ds.asNumeric('df_ext_ppd_l$child_id', newobj='n.child_id')
ds.asFactor('df_ext_ppd_l$only_child', newobj.name='f.only_child')
ds.asFactor('df_ext_ppd_l$sex', newobj.name='f.sex')
ds.asFactor('df_ext_ppd_l$edu_m_.0', newobj.name='f.edu_m_.0')
ds.asFactor('df_ext_ppd_l$fam_splitup.0', newobj.name='f.fam_splitup.0', datasources = c.data[c('alspac', 'generationR', 'dnbc', 'eden', 'elfe')])
# i have to dichotomize this mothers employment so that it can be used for alspac
ds.asNumeric("df_ext_ppd_l$femp_cat_mom_0", newobj = "mom.empl.dich")
ds.table('mom.empl.dich')
ds.Boole(V1="mom.empl.dich", V2='1', Boolean.operator='==', numeric.output=TRUE, newobj="mom.emp.dich")
ds.table('mom.emp.dich') 
ds.asFactor('mom.emp.dich', newobj.name='f.mom.emp.dich')
ds.asFactor('df_ext_ppd_l$femp_cat_mom_0', newobj.name='f.femp_cat_mom_0')
ds.asFactor('df_ext_ppd_l$f.cen_dur_cat', newobj.name='f.cen_dur_cat')
ds.asFactor('df_ext_ppd_l$ppd', newobj.name='f.ppd')


ds.dataFrame(x=c('df_ext_ppd_l',"f.femp_cat_mom_0",  'n.ext_pc_','f.only_child', 'f.centre_care','f.cen_dur_cat','f.ppd','n.ext_age_','n.age_years', 'n.agebirth_m_y', 'n.birth_weight', 'n.child_id', 'f.only_child','f.edu_m_.0', 'f.sex','f.fam_splitup.0'), newobj='ext_ppdmother', datasources = c.data[c('generationR', 'dnbc', 'eden', 'elfe')])
ds.dataFrame(x=c('df_ext_ppd_l',"f.femp_cat_mom_0", 'n.ext_pc_',"f.mom.emp.dich", 'f.only_child', 'f.centre_care','f.cen_dur_cat','f.ppd','n.ext_age_','n.age_years', 'n.agebirth_m_y', 'n.birth_weight', 'n.child_id', 'f.only_child','f.edu_m_.0', 'f.sex','f.fam_splitup.0'), newobj='ext_ppdmother', datasources = c.data[c('alspac')])

datashield.workspace_save(c.data, "ppd_data_prep")

dh.makeStrata(
  df = "ext_ppdmother",
  var_to_subset = "n.ext_pc_",
  age_var = "n.ext_age_", 
  bands = c(5, 7, 7, 10, 10, 13, 13, 18), 
  mult_action = "earliest",
  band_action = "ge_l", 
  keep_vars = c('f.fam_splitup.0',  'f.cen_dur_cat', 'n.agebirth_m_y', 'f.only_child', 'f.sex', 'f.edu_m_.0','f.mom.emp.dich', 'f.centre_care', 'n.birth_weight', 'f.ppd'), 
  id_var = "n.child_id", 
  new_obj = "ext_ppdmother_strat",
  conns = c.data[c('alspac')])

dh.makeStrata(
  df = "ext_ppdmother",
  var_to_subset = "n.ext_pc_",
  age_var = "n.ext_age_", 
  bands = c(5, 7, 7, 10, 10, 13, 13, 18), 
  mult_action = "earliest",
  band_action = "ge_l", 
  keep_vars = c('f.fam_splitup.0',  'f.cen_dur_cat', 'n.agebirth_m_y', 'f.only_child', 'f.sex', 'f.edu_m_.0','f.femp_cat_mom_0', 'f.centre_care', 'n.birth_weight', 'f.ppd'), 
  id_var = "n.child_id", 
  new_obj = "ext_ppdmother_strat",
  conns = c.data[c("generationR", "dnbc", 'elfe', 'eden')])

ds.dim('ext_ppdmother_strat', c.data[c("generationR", "dnbc", 'elfe', 'eden')])

datashield.workspace_save(c.data, "ppd_ext_strata")


###################################### testing for significant interactions
c.data <- DSI::datashield.login(logins = logindata, restore="internal_income_strata")
###### income level differences in internalizing behavior____________________________________________

#alspac
ds.colnames('int_income_strat',datasources = c.data[c('alspac')])

### compare log likelihood using chi-square test



# model without interaction
int_5_6_adj_alspac<-ds.glmSLMA(formula = "n.int_pc_.7 ~ f.centre_care.7+ n.birth_weight.7+ n.agebirth_m_y.7+ f.fam_splitup.0.7+ f.only_child.7+ f.sex.7+ f.edu_m_.0.7+ f.mom.emp.dich.7+f.flowincome.7",
                               data = "int_income_strat",
                               family = "gaussian",
                               newobj = 'alspac56_noint',
                               datasources = c.data[c('alspac')])

# model with interaction

int_5_6_adj_alspacint <- ds.glmSLMA(formula = "n.int_pc_.7 ~ f.centre_care.7+ n.birth_weight.7+ n.agebirth_m_y.7+ f.fam_splitup.0.7+ f.only_child.7+ f.sex.7+ f.edu_m_.0.7+ f.mom.emp.dich.7+f.flowincome.7+f.flowincome.7*f.centre_care.7",
                                    data = "int_income_strat",
                                    family = "gaussian",
                                    datasources = c.data[c('alspac')])

# deviance without interaction
devint_5_6_adj_alspac <- int_5_6_adj_alspac$output.summary$study1$deviance.resid

# deviance in model with interaction
devint_5_6_adj_alspacint <- int_5_6_adj_alspacint$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.alspac56 <- devint_5_6_adj_alspac - devint_5_6_adj_alspacint)

# this difference now needs to be "scaled". Scale parameter is given by:
(scalealspac56 <- devint_5_6_adj_alspacint/int_5_6_adj_alspacint$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.alspac.56 <- dev.diff.alspac56/scalealspac56)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.alspac.56 <- 1-pchisq(scaled.dev.alspac.56,1))

# model          Resid. Dev            
# no int         5625327.70
# int            5625318.36

#p value
# 0.9227695


int_7_9_adj_alspac <- ds.glmSLMA(formula = "n.int_pc_.10 ~ f.centre_care.10+ n.birth_weight.10+ n.agebirth_m_y.10+ f.fam_splitup.0.10+f.only_child.10+ f.sex.10+ f.edu_m_.0.10+ f.mom.emp.dich.10+f.flowincome.10",
                                   data = "int_income_strat",
                                   family = "gaussian",
                                   datasources = c.data[c('alspac')])

int_7_9_adj_alspacint <- ds.glmSLMA(formula = "n.int_pc_.10 ~ f.centre_care.10+ n.birth_weight.10+ n.agebirth_m_y.10+ f.fam_splitup.0.10+f.only_child.10 + f.sex.10+ f.edu_m_.0.10+ f.mom.emp.dich.10+f.flowincome.10+f.flowincome.10*f.centre_care.10",
                                      data = "int_income_strat",
                                      family = "gaussian",
                                      datasources = c.data[c('alspac')])



# deviance without interaction
devint_7_9_adj_alspac <- int_7_9_adj_alspac$output.summary$study1$deviance.resid
devint_7_9_adj_alspac
# deviance in model with interaction
devint_7_9_adj_alspacint <- int_7_9_adj_alspacint$output.summary$study1$deviance.resid
devint_7_9_adj_alspacint
# difference in deviance
(dev.diff.alspac7_9 <- devint_7_9_adj_alspac - devint_7_9_adj_alspacint)

# this difference now needs to be "scaled". Scale parameter is given by:
(scalealspac7_9 <- devint_7_9_adj_alspacint/int_7_9_adj_alspacint$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.alspac.7_9 <- dev.diff.alspac7_9/scalealspac7_9)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.alspac.7_9 <- 1-pchisq(scaled.dev.alspac.7_9,1))



int_10_12_adj_alspac <- ds.glmSLMA(formula = "n.int_pc_.13 ~ f.centre_care.13+ n.birth_weight.13+ n.agebirth_m_y.13+ f.fam_splitup.0.13+f.only_child.13+ f.sex.13+ f.edu_m_.0.13+ f.mom.emp.dich.13+f.flowincome.13",
                                   data = "int_income_strat",
                                   family = "gaussian",
                                   datasources = c.data[c('alspac')])

int_10_12_adj_alspacint <- ds.glmSLMA(formula = "n.int_pc_.13 ~ f.centre_care.13+ n.birth_weight.13+ n.agebirth_m_y.13+ f.fam_splitup.0.13+f.only_child.13+ f.sex.13+ f.edu_m_.0.13+ f.mom.emp.dich.13+f.flowincome.13+f.flowincome.13*f.centre_care.13",
                                      data = "int_income_strat",
                                      family = "gaussian",
                                      datasources = c.data[c('alspac')])



# deviance without interaction
devint_10_12_adj_alspac <- int_10_12_adj_alspac$output.summary$study1$deviance.resid

# deviance in model with interaction
devint_10_12_adj_alspacint <- int_10_12_adj_alspacint$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.alspac10_12 <- devint_10_12_adj_alspac - devint_10_12_adj_alspacint)

# this difference now needs to be "scaled". Scale parameter is given by:
(scalealspac10_12 <- devint_10_12_adj_alspacint/int_10_12_adj_alspacint$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.alspac.10_12 <- dev.diff.alspac10_12/scalealspac10_12)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.alspac.10_12 <- 1-pchisq(scaled.dev.alspac.10_12,1))




int_13_18_adj_alspac <- ds.glmSLMA(formula = "n.int_pc_.18 ~ f.centre_care.18+ n.birth_weight.18+ n.agebirth_m_y.18+ f.fam_splitup.0.18+f.only_child.18+ f.sex.18+ f.edu_m_.0.18+ f.mom.emp.dich.18+f.flowincome.18",
                                   data = "int_income_strat",
                                   family = "gaussian",
                                   datasources = c.data[c('alspac')])

int_13_18_adj_alspacint <- ds.glmSLMA(formula = "n.int_pc_.18 ~ f.centre_care.18+ n.birth_weight.18+ n.agebirth_m_y.18+ f.fam_splitup.0.18+f.only_child.18+ f.sex.18+ f.edu_m_.0.18+ f.mom.emp.dich.18+f.flowincome.18+f.flowincome.18*f.centre_care.18",
                                      data = "int_income_strat",
                                      family = "gaussian",
                                      datasources = c.data[c('alspac')])



# deviance without interaction
devint_13_18_adj_alspac <- int_13_18_adj_alspac$output.summary$study1$deviance.resid

# deviance in model with interaction
devint_13_18_adj_alspacint <- int_13_18_adj_alspacint$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.alspac13_18 <- devint_13_18_adj_alspac - devint_13_18_adj_alspacint)

# this difference now needs to be "scaled". Scale parameter is given by:
(scalealspac13_18 <- devint_13_18_adj_alspacint/int_13_18_adj_alspacint$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.alspac.13_18 <- dev.diff.alspac13_18/scalealspac13_18)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.alspac.13_18 <- 1-pchisq(scaled.dev.alspac.13_18,1))






#genr
int_5_6_adj_genr <- ds.glmSLMA(formula = "n.int_pc_.7 ~ f.centre_care.7+ n.birth_weight.7+ n.agebirth_m_y.7+ f.fam_splitup.0.7+ f.only_child.7+ f.sex.7+ f.edu_m_.0.7+ f.femp_cat_mom_0.7+f.flowincome.7",
                           data = "int_income_strat",
                           family = "gaussian",
                           datasources = c.data[c('generationR')])




int_5_6_adj_genrint <- ds.glmSLMA(formula = "n.int_pc_.7 ~ f.centre_care.7+ n.birth_weight.7+ n.agebirth_m_y.7+ f.fam_splitup.0.7+ f.only_child.7+ f.sex.7+ f.edu_m_.0.7+ f.femp_cat_mom_0.7+f.flowincome.7+f.flowincome.7*f.centre_care.7",
                           data = "int_income_strat",
                           family = "gaussian",
                           datasources = c.data[c('generationR')])



# deviance without interaction
devint_5_6_adj_genr <- int_5_6_adj_genr$output.summary$study1$deviance.resid

# deviance in model with interaction
devint_5_6_adj_genrint <- int_5_6_adj_genrint$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.genr5_6 <- devint_5_6_adj_genr - devint_5_6_adj_genrint)

# this difference now needs to be "scaled". Scale parameter is given by:
(scalegenr5_6 <- devint_5_6_adj_genrint/int_5_6_adj_genrint$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.genr5_6 <- dev.diff.genr5_6/scalegenr5_6)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.genr5_6 <- 1-pchisq(scaled.dev.genr5_6,1))




int_7_9_adj_genr <- ds.glmSLMA(formula = "n.int_pc_.10 ~ f.centre_care.10+ n.birth_weight.10+ n.agebirth_m_y.10+ f.fam_splitup.0.10+ f.only_child.10+ f.sex.10+ f.edu_m_.0.10+ f.femp_cat_mom_0.10+f.flowincome.10",
                               data = "int_income_strat",
                               family = "gaussian",
                               datasources = c.data[c('generationR')])




int_7_9_adj_genrint <- ds.glmSLMA(formula = "n.int_pc_.10 ~ f.centre_care.10+ n.birth_weight.10+ n.agebirth_m_y.10+ f.fam_splitup.0.10+ f.only_child.10+ f.sex.10+ f.edu_m_.0.10+ f.femp_cat_mom_0.10+f.flowincome.10+f.flowincome.10*f.centre_care.10",
                                  data = "int_income_strat",
                                  family = "gaussian",
                                  datasources = c.data[c('generationR')])



# deviance without interaction
devint_7_9_adj_genr <- int_7_9_adj_genr$output.summary$study1$deviance.resid

# deviance in model with interaction
devint_7_9_adj_genrint <- int_7_9_adj_genrint$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.genr7_9 <- devint_7_9_adj_genr - devint_7_9_adj_genrint)

# this difference now needs to be "scaled". Scale parameter is given by:
(scalegenr7_9 <- devint_7_9_adj_genrint/int_7_9_adj_genrint$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.genr7_9 <- dev.diff.genr7_9/scalegenr7_9)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.genr7_9 <- 1-pchisq(scaled.dev.genr7_9,1))



int_10_12_adj_genr <- ds.glmSLMA(formula = "n.int_pc_.13 ~ f.centre_care.13+ n.birth_weight.13+ n.agebirth_m_y.13+ f.fam_splitup.0.13+ f.only_child.13+ f.sex.13+ f.edu_m_.0.13+ f.femp_cat_mom_0.13+f.flowincome.13",
                               data = "int_income_strat",
                               family = "gaussian",
                               datasources = c.data[c('generationR')])




int_10_12_adj_genrint <- ds.glmSLMA(formula = "n.int_pc_.13 ~ f.centre_care.13+ n.birth_weight.13+ n.agebirth_m_y.13+ f.fam_splitup.0.13+ f.only_child.13+ f.sex.13+ f.edu_m_.0.13+ f.femp_cat_mom_0.13+f.flowincome.13+f.flowincome.13*f.centre_care.13",
                                  data = "int_income_strat",
                                  family = "gaussian",
                                  datasources = c.data[c('generationR')])



# deviance without interaction
devint_10_12_adj_genr <- int_10_12_adj_genr$output.summary$study1$deviance.resid

# deviance in model with interaction
devint_10_12_adj_genrint <- int_10_12_adj_genrint$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.genr10_12 <- devint_10_12_adj_genr - devint_10_12_adj_genrint)

# this difference now needs to be "scaled". Scale parameter is given by:
(scalegenr10_12 <- devint_10_12_adj_genrint/int_10_12_adj_genrint$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.genr10_12 <- dev.diff.genr10_12/scalegenr10_12)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.genr10_12 <- 1-pchisq(scaled.dev.genr10_12,1))




#dnbc
int_7_9_adj_dnbc <- ds.glmSLMA(formula = "n.int_pc_.10 ~ f.centre_care.10+ n.birth_weight.10+ n.agebirth_m_y.10+ f.fam_splitup.0.10+f.only_child.10+ f.sex.10+ f.edu_m_.0.10+ f.femp_cat_mom_0.10+f.flowincome.10",
                                 data = "int_income_strat",
                                 family = "gaussian",
                                 datasources = c.data[c('dnbc')])

int_7_9_adj_dnbcint <- ds.glmSLMA(formula = "n.int_pc_.10 ~ f.centre_care.10+ n.birth_weight.10+ n.agebirth_m_y.10+ f.fam_splitup.0.10+f.only_child.10+ f.sex.10+ f.edu_m_.0.10+ f.femp_cat_mom_0.10+f.flowincome.10+f.flowincome.10*f.centre_care.10",
                                    data = "int_income_strat",
                                    family = "gaussian",
                                    datasources = c.data[c('dnbc')])



#deviance without interaction
devint_7_9_adj_dnbc <- int_7_9_adj_dnbc$output.summary$study1$deviance.resid

# deviance in model with interaction
devint_7_9_adj_dnbcint <- int_7_9_adj_dnbcint$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.dnbc7_9 <- devint_7_9_adj_dnbc - devint_7_9_adj_dnbcint)

# this difference now needs to be "scaled". Scale parameter is given by:
(scalednbc7_9 <- devint_7_9_adj_dnbcint/int_7_9_adj_dnbcint$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.dnbc7_9 <- dev.diff.dnbc7_9/scalednbc7_9)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.dnbc7_9 <- 1-pchisq(scaled.dev.dnbc7_9,1))


int_10_12_adj_dnbc <- ds.glmSLMA(formula = "n.int_pc_.13 ~ f.centre_care.13+ n.birth_weight.13+ n.agebirth_m_y.13+ f.fam_splitup.0.13+f.only_child.13+ f.sex.13+ f.edu_m_.0.13+ f.femp_cat_mom_0.13+f.flowincome.13",
                               data = "int_income_strat",
                               family = "gaussian",
                               datasources = c.data[c('dnbc')])

int_10_12_adj_dnbcint <- ds.glmSLMA(formula = "n.int_pc_.13 ~ f.centre_care.13+ n.birth_weight.13+ n.agebirth_m_y.13+ f.fam_splitup.0.13+f.only_child.13+ f.sex.13+ f.edu_m_.0.13+ f.femp_cat_mom_0.13+f.flowincome.13+f.flowincome.13*f.centre_care.13",
                                  data = "int_income_strat",
                                  family = "gaussian",
                                  datasources = c.data[c('dnbc')])



#deviance without interaction
devint_10_12_adj_dnbc <- int_10_12_adj_dnbc$output.summary$study1$deviance.resid

# deviance in model with interaction
devint_10_12_adj_dnbcint <- int_10_12_adj_dnbcint$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.dnbc10_12 <- devint_10_12_adj_dnbc - devint_10_12_adj_dnbcint)

# this difference now needs to be "scaled". Scale parameter is given by:
(scalednbc10_12 <- devint_10_12_adj_dnbcint/int_10_12_adj_dnbcint$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.dnbc10_12 <- dev.diff.dnbc10_12/scalednbc10_12)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.dnbc10_12 <- 1-pchisq(scaled.dev.dnbc10_12,1))

int_13_18_adj_dnbc <- ds.glmSLMA(formula = "n.int_pc_.18 ~ f.centre_care.18+ n.birth_weight.18+ n.agebirth_m_y.18+f.only_child.18+ f.sex.18+ f.edu_m_.0.18+ f.femp_cat_mom_0.18+f.flowincome.18",
                                 data = "int_income_strat",
                                 family = "gaussian",
                                 datasources = c.data[c('dnbc')])

int_13_18_adj_dnbcint <- ds.glmSLMA(formula = "n.int_pc_.18 ~ f.centre_care.18+ n.birth_weight.18+ n.agebirth_m_y.18+f.only_child.18+ f.sex.18+ f.edu_m_.0.18+ f.femp_cat_mom_0.18+f.flowincome.18+f.flowincome.18*f.centre_care.18",
                                    data = "int_income_strat",
                                    family = "gaussian",
                                    datasources = c.data[c('dnbc')])



#deviance without interaction
devint_13_18_adj_dnbc <- int_13_18_adj_dnbc$output.summary$study1$deviance.resid

# deviance in model with interaction
devint_13_18_adj_dnbcint <- int_13_18_adj_dnbcint$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.dnbc13_18 <- devint_13_18_adj_dnbc - devint_13_18_adj_dnbcint)

# this difference now needs to be "scaled". Scale parameter is given by:
(scalednbc13_18 <- devint_13_18_adj_dnbcint/int_13_18_adj_dnbcint$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.dnbc13_18 <- dev.diff.dnbc13_18/scalednbc13_18)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.dnbc13_18 <- 1-pchisq(scaled.dev.dnbc13_18,1))



# INMA
int_7_9_adj_inma <- ds.glmSLMA(formula = "n.int_pc_.10 ~ f.centre_care.10+ n.birth_weight.10+ n.agebirth_m_y.10+ f.only_child.10+ f.sex.10+ f.edu_m_.0.10+ f.femp_cat_mom_0.10+f.flowincome.10",
                               data = "int_income_strat",
                               family = "gaussian",
                               datasources = c.data[c('INMA')])




int_7_9_adj_inmaint <- ds.glmSLMA(formula = "n.int_pc_.10 ~ f.centre_care.10+ n.birth_weight.10+ n.agebirth_m_y.10+ f.only_child.10+ f.sex.10+ f.edu_m_.0.10+ f.femp_cat_mom_0.10+f.flowincome.10+f.flowincome.10*f.centre_care.10",
                                  data = "int_income_strat",
                                  family = "gaussian",
                                  datasources = c.data[c('INMA')])



# deviance without interaction
devint_7_9_adj_inma <- int_7_9_adj_inma$output.summary$study1$deviance.resid

# deviance in model with interaction
devint_7_9_adj_inmaint <- int_7_9_adj_inmaint$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.inma7_9 <- devint_7_9_adj_inma - devint_7_9_adj_inmaint)

# this difference now needs to be "scaled". Scale parameter is given by:
(scaleinma7_9 <- devint_7_9_adj_inmaint/int_7_9_adj_inmaint$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.inma7_9 <- dev.diff.inma7_9/scaleinma7_9)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.inma7_9 <- 1-pchisq(scaled.dev.inma7_9,1))



int_10_12_adj_inma <- ds.glmSLMA(formula = "n.int_pc_.13 ~ f.centre_care.13+ n.birth_weight.13+ n.agebirth_m_y.13+ f.only_child.13+ f.sex.13+ f.edu_m_.0.13+ f.femp_cat_mom_0.13+f.flowincome.13",
                               data = "int_income_strat",
                               family = "gaussian",
                               datasources = c.data[c('INMA')])




int_10_12_adj_inmaint <- ds.glmSLMA(formula = "n.int_pc_.13 ~ f.centre_care.13+ n.birth_weight.13+ n.agebirth_m_y.13+ f.only_child.13+ f.sex.13+ f.edu_m_.0.13+ f.femp_cat_mom_0.13+f.flowincome.13+f.flowincome.13*f.centre_care.13",
                                  data = "int_income_strat",
                                  family = "gaussian",
                                  datasources = c.data[c('INMA')])



# deviance without interaction
devint_10_12_adj_inma <- int_10_12_adj_inma$output.summary$study1$deviance.resid

# deviance in model with interaction
devint_10_12_adj_inmaint <- int_10_12_adj_inmaint$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.inma10_12 <- devint_10_12_adj_inma - devint_10_12_adj_inmaint)

# this difference now needs to be "scaled". Scale parameter is given by:
(scaleinma10_12 <- devint_10_12_adj_inmaint/int_10_12_adj_inmaint$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.inma10_12 <- dev.diff.inma10_12/scaleinma10_12)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.inma10_12 <- 1-pchisq(scaled.dev.inma10_12,1))


# EDEN

int_5_6_adj_eden <- ds.glmSLMA(formula = "n.int_pc_.7 ~ f.centre_care.7+ n.birth_weight.7+ n.agebirth_m_y.7+ f.fam_splitup.0.7+ f.only_child.7+ f.sex.7+ f.edu_m_.0.7+ f.femp_cat_mom_0.7+f.flowincome.7",
                               data = "int_income_strat",
                               family = "gaussian",
                               datasources = c.data[c('eden')])




int_5_6_adj_edenint <- ds.glmSLMA(formula = "n.int_pc_.7 ~ f.centre_care.7+ n.birth_weight.7+ n.agebirth_m_y.7+ f.fam_splitup.0.7+ f.only_child.7+ f.sex.7+ f.edu_m_.0.7+ f.femp_cat_mom_0.7+f.flowincome.7+f.flowincome.7*f.centre_care.7",
                                  data = "int_income_strat",
                                  family = "gaussian",
                                  datasources = c.data[c('eden')])



# deviance without interaction
devint_5_6_adj_eden <- int_5_6_adj_eden$output.summary$study1$deviance.resid

# deviance in model with interaction
devint_5_6_adj_edenint <- int_5_6_adj_edenint$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.eden5_6 <- devint_5_6_adj_eden - devint_5_6_adj_edenint)

# this difference now needs to be "scaled". Scale parameter is given by:
(scaleeden5_6 <- devint_5_6_adj_edenint/int_5_6_adj_edenint$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.eden5_6 <- dev.diff.eden5_6/scaleeden5_6)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.eden5_6 <- 1-pchisq(scaled.dev.eden5_6,1))


int_7_9_adj_eden <- ds.glmSLMA(formula = "n.int_pc_.10 ~ f.centre_care.10+ n.birth_weight.10+ n.agebirth_m_y.10+ f.fam_splitup.0.10+ f.only_child.10+ f.sex.10+ f.edu_m_.0.10+ f.femp_cat_mom_0.10+f.flowincome.10",
                               data = "int_income_strat",
                               family = "gaussian",
                               datasources = c.data[c('eden')])




int_7_9_adj_edenint <- ds.glmSLMA(formula = "n.int_pc_.10 ~ f.centre_care.10+ n.birth_weight.10+ n.agebirth_m_y.10+ f.fam_splitup.0.10+ f.only_child.10+ f.sex.10+ f.edu_m_.0.10+ f.femp_cat_mom_0.10+f.flowincome.10+f.flowincome.10*f.centre_care.10",
                                  data = "int_income_strat",
                                  family = "gaussian",
                                  datasources = c.data[c('eden')])



# deviance without interaction
devint_7_9_adj_eden <- int_7_9_adj_eden$output.summary$study1$deviance.resid

# deviance in model with interaction
devint_7_9_adj_edenint <- int_7_9_adj_edenint$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.eden7_9 <- devint_7_9_adj_eden - devint_7_9_adj_edenint)

# this difference now needs to be "scaled". Scale parameter is given by:
(scaleeden7_9 <- devint_7_9_adj_edenint/int_7_9_adj_edenint$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.eden7_9 <- dev.diff.eden7_9/scaleeden7_9)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.eden7_9 <- 1-pchisq(scaled.dev.eden7_9,1))


# ELFE

int_5_6_adj_elfe <- ds.glmSLMA(formula = "n.int_pc_.7 ~ f.centre_care.7+ n.birth_weight.7+ n.agebirth_m_y.7+ f.fam_splitup.0.7+ f.only_child.7+ f.sex.7+ f.edu_m_.0.7+ f.femp_cat_mom_0.7+f.flowincome.7",
                               data = "int_income_strat",
                               family = "gaussian",
                               datasources = c.data[c('elfe')])




int_5_6_adj_elfeint <- ds.glmSLMA(formula = "n.int_pc_.7 ~ f.centre_care.7+ n.birth_weight.7+ n.agebirth_m_y.7+ f.fam_splitup.0.7+ f.only_child.7+ f.sex.7+ f.edu_m_.0.7+ f.femp_cat_mom_0.7+f.flowincome.7+f.flowincome.7*f.centre_care.7",
                                  data = "int_income_strat",
                                  family = "gaussian",
                                  datasources = c.data[c('elfe')])



# deviance without interaction
devint_5_6_adj_elfe <- int_5_6_adj_elfe$output.summary$study1$deviance.resid

# deviance in model with interaction
devint_5_6_adj_elfeint <- int_5_6_adj_elfeint$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.elfe5_6 <- devint_5_6_adj_elfe - devint_5_6_adj_elfeint)

# this difference now needs to be "scaled". Scale parameter is given by:
(scaleelfe5_6 <- devint_5_6_adj_elfeint/int_5_6_adj_elfeint$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.elfe5_6 <- dev.diff.elfe5_6/scaleelfe5_6)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.elfe5_6 <- 1-pchisq(scaled.dev.elfe5_6,1))


# NINFEA

int_10_12_adj_ninfea <- ds.glmSLMA(formula = "n.int_pc_.13 ~ f.centre_care.13+ n.birth_weight.13+ n.agebirth_m_y.13+ f.only_child.13+ f.sex.13+ f.femp_cat_mom_0.13+f.flowincome.13",
                                 data = "int_income_strat",
                                 family = "gaussian",
                                 datasources = c.data[c('ninfea')])




int_10_12_adj_ninfeaint <- ds.glmSLMA(formula = "n.int_pc_.13 ~ f.centre_care.13+ n.birth_weight.13+ n.agebirth_m_y.13+ f.only_child.13+ f.sex.13+ f.femp_cat_mom_0.13+f.flowincome.13+f.flowincome.13*f.centre_care.13",
                                    data = "int_income_strat",
                                    family = "gaussian",
                                    datasources = c.data[c('ninfea')])



# deviance without interaction
devint_10_12_adj_ninfea <- int_10_12_adj_ninfea$output.summary$study1$deviance.resid

# deviance in model with interaction
devint_10_12_adj_ninfeaint <- int_10_12_adj_ninfeaint$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.ninfea10_12 <- devint_10_12_adj_ninfea - devint_10_12_adj_ninfeaint)

# this difference now needs to be "scaled". Scale parameter is given by:
(scaleninfea10_12 <- devint_10_12_adj_ninfeaint/int_10_12_adj_ninfeaint$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.ninfea10_12 <- dev.diff.ninfea10_12/scaleninfea10_12)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.ninfea10_12 <- 1-pchisq(scaled.dev.ninfea10_12,1))


int_13_18_adj_ninfea <- ds.glmSLMA(formula = "n.int_pc_.18 ~ f.centre_care.18+ n.birth_weight.18+ n.agebirth_m_y.18+ f.only_child.18+ f.sex.18+ f.edu_m_.0.18+ f.femp_cat_mom_0.18+f.flowincome.18",
                                   data = "int_income_strat",
                                   family = "gaussian",
                                   datasources = c.data[c('ninfea')])




int_13_18_adj_ninfeaint <- ds.glmSLMA(formula = "n.int_pc_.18 ~ f.centre_care.18+ n.birth_weight.18+ n.agebirth_m_y.18+ f.only_child.18+ f.sex.18+ f.edu_m_.0.18+ f.femp_cat_mom_0.18+f.flowincome.18+f.flowincome.18*f.centre_care.18",
                                      data = "int_income_strat",
                                      family = "gaussian",
                                      datasources = c.data[c('ninfea')])



# deviance without interaction
devint_13_18_adj_ninfea <- int_13_18_adj_ninfea$output.summary$study1$deviance.resid

# deviance in model with interaction
devint_13_18_adj_ninfeaint <- int_13_18_adj_ninfeaint$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.ninfea13_18 <- devint_13_18_adj_ninfea - devint_13_18_adj_ninfeaint)

# this difference now needs to be "scaled". Scale parameter is given by:
(scaleninfea13_18 <- devint_13_18_adj_ninfeaint/int_13_18_adj_ninfeaint$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.ninfea13_18 <- dev.diff.ninfea13_18/scaleninfea13_18)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.ninfea13_18 <- 1-pchisq(scaled.dev.ninfea13_18,1))


## to collect sample sizes
ds.dim('int_income_strat')
ds.colnames('int_income_strat')
ds.mean('int_income_strat$n.int_pc_.7')
ds.mean('int_income_strat$n.int_pc_.10')
ds.mean('int_income_strat$n.int_pc_.13')
ds.mean('int_income_strat$n.int_pc_.18')

###################################################
###################################################
## externalizing behaviors 

c.data <- DSI::datashield.login(logins = logindata, restore="external_income_strata")

### externalizing behavior and household income status



### externalizing behavior and household income status
#load libraries
library(DSMolgenisArmadillo)
library(dsBaseClient)
library(remotes)
install_github("lifecycle-project/ds-helper")
library(DSI)
library(DSOpal)
library('stringr')
#login to all cohorts


c.data <- DSI::datashield.login(logins = logindata, restore="external_income_strata")

# model without interaction
ext_5_6_adj_alspac<-ds.glmSLMA(formula = "n.ext_pc_.7 ~ f.centre_care.7+ n.birth_weight.7+ n.agebirth_m_y.7+ f.fam_splitup.0.7+ f.only_child.7+ f.sex.7+ f.edu_m_.0.7+ f.mom.emp.dich.7+f.flowincome.7",
                               data = "ext_income_strat",
                               family = "gaussian",
                               newobj = 'alspac56_noext',
                               datasources = c.data[c('alspac')])

# model with interaction

ext_5_6_adj_alspacext <- ds.glmSLMA(formula = "n.ext_pc_.7 ~ f.centre_care.7+ n.birth_weight.7+ n.agebirth_m_y.7+ f.fam_splitup.0.7+ f.only_child.7+ f.sex.7+ f.edu_m_.0.7+ f.mom.emp.dich.7+f.flowincome.7+f.flowincome.7*f.centre_care.7",
                                    data = "ext_income_strat",
                                    family = "gaussian",
                                    datasources = c.data[c('alspac')])

# deviance without interaction
devext_5_6_adj_alspac <- ext_5_6_adj_alspac$output.summary$study1$deviance.resid

# deviance in model with interaction
devext_5_6_adj_alspacext <- ext_5_6_adj_alspacext$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.alspac56 <- devext_5_6_adj_alspac - devext_5_6_adj_alspacext)

# this difference now needs to be "scaled". Scale parameter is given by:
(scalealspac56 <- devext_5_6_adj_alspacext/ext_5_6_adj_alspacext$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.alspac.56 <- dev.diff.alspac56/scalealspac56)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.alspac.56 <- 1-pchisq(scaled.dev.alspac.56,1))




ext_7_9_adj_alspac <- ds.glmSLMA(formula = "n.ext_pc_.10 ~ f.centre_care.10+ n.birth_weight.10+ n.agebirth_m_y.10+ f.fam_splitup.0.10+f.only_child.10+ f.sex.10+ f.edu_m_.0.10+ f.mom.emp.dich.10+f.flowincome.10",
                                 data = "ext_income_strat",
                                 family = "gaussian",
                                 datasources = c.data[c('alspac')])

ext_7_9_adj_alspacext <- ds.glmSLMA(formula = "n.ext_pc_.10 ~ f.centre_care.10+ n.birth_weight.10+ n.agebirth_m_y.10+ f.fam_splitup.0.10+f.only_child.10 + f.sex.10+ f.edu_m_.0.10+ f.mom.emp.dich.10+f.flowincome.10+f.flowincome.10*f.centre_care.10",
                                    data = "ext_income_strat",
                                    family = "gaussian",
                                    datasources = c.data[c('alspac')])



# deviance without interaction
devext_7_9_adj_alspac <- ext_7_9_adj_alspac$output.summary$study1$deviance.resid
devext_7_9_adj_alspac
# deviance in model with interaction
devext_7_9_adj_alspacext <- ext_7_9_adj_alspacext$output.summary$study1$deviance.resid
devext_7_9_adj_alspacext
# difference in deviance
(dev.diff.alspac7_9 <- devext_7_9_adj_alspac - devext_7_9_adj_alspacext)

# this difference now needs to be "scaled". Scale parameter is given by:
(scalealspac7_9 <- devext_7_9_adj_alspacext/ext_7_9_adj_alspacext$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.alspac.7_9 <- dev.diff.alspac7_9/scalealspac7_9)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.alspac.7_9 <- 1-pchisq(scaled.dev.alspac.7_9,1))



ext_10_12_adj_alspac <- ds.glmSLMA(formula = "n.ext_pc_.13 ~ f.centre_care.13+ n.birth_weight.13+ n.agebirth_m_y.13+ f.fam_splitup.0.13+f.only_child.13+ f.sex.13+ f.edu_m_.0.13+ f.mom.emp.dich.13+f.flowincome.13",
                                   data = "ext_income_strat",
                                   family = "gaussian",
                                   datasources = c.data[c('alspac')])

ext_10_12_adj_alspacext <- ds.glmSLMA(formula = "n.ext_pc_.13 ~ f.centre_care.13+ n.birth_weight.13+ n.agebirth_m_y.13+ f.fam_splitup.0.13+f.only_child.13+ f.sex.13+ f.edu_m_.0.13+ f.mom.emp.dich.13+f.flowincome.13+f.flowincome.13*f.centre_care.13",
                                      data = "ext_income_strat",
                                      family = "gaussian",
                                      datasources = c.data[c('alspac')])



# deviance without interaction
devext_10_12_adj_alspac <- ext_10_12_adj_alspac$output.summary$study1$deviance.resid

# deviance in model with interaction
devext_10_12_adj_alspacext <- ext_10_12_adj_alspacext$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.alspac10_12 <- devext_10_12_adj_alspac - devext_10_12_adj_alspacext)

# this difference now needs to be "scaled". Scale parameter is given by:
(scalealspac10_12 <- devext_10_12_adj_alspacext/ext_10_12_adj_alspacext$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.alspac.10_12 <- dev.diff.alspac10_12/scalealspac10_12)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.alspac.10_12 <- 1-pchisq(scaled.dev.alspac.10_12,1))




ext_13_18_adj_alspac <- ds.glmSLMA(formula = "n.ext_pc_.18 ~ f.centre_care.18+ n.birth_weight.18+ n.agebirth_m_y.18+ f.fam_splitup.0.18+f.only_child.18+ f.sex.18+ f.edu_m_.0.18+ f.mom.emp.dich.18+f.flowincome.18",
                                   data = "ext_income_strat",
                                   family = "gaussian",
                                   datasources = c.data[c('alspac')])

ext_13_18_adj_alspacext <- ds.glmSLMA(formula = "n.ext_pc_.18 ~ f.centre_care.18+ n.birth_weight.18+ n.agebirth_m_y.18+ f.fam_splitup.0.18+f.only_child.18+ f.sex.18+ f.edu_m_.0.18+ f.mom.emp.dich.18+f.flowincome.18+f.flowincome.18*f.centre_care.18",
                                      data = "ext_income_strat",
                                      family = "gaussian",
                                      datasources = c.data[c('alspac')])



# deviance without interaction
devext_13_18_adj_alspac <- ext_13_18_adj_alspac$output.summary$study1$deviance.resid

# deviance in model with interaction
devext_13_18_adj_alspacext <- ext_13_18_adj_alspacext$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.alspac13_18 <- devext_13_18_adj_alspac - devext_13_18_adj_alspacext)

# this difference now needs to be "scaled". Scale parameter is given by:
(scalealspac13_18 <- devext_13_18_adj_alspacext/ext_13_18_adj_alspacext$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.alspac.13_18 <- dev.diff.alspac13_18/scalealspac13_18)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.alspac.13_18 <- 1-pchisq(scaled.dev.alspac.13_18,1))






#genr
ext_5_6_adj_genr <- ds.glmSLMA(formula = "n.ext_pc_.7 ~ f.centre_care.7+ n.birth_weight.7+ n.agebirth_m_y.7+ f.fam_splitup.0.7+ f.only_child.7+ f.sex.7+ f.edu_m_.0.7+ f.femp_cat_mom_0.7+f.flowincome.7",
                               data = "ext_income_strat",
                               family = "gaussian",
                               datasources = c.data[c('generationR')])




ext_5_6_adj_genrext <- ds.glmSLMA(formula = "n.ext_pc_.7 ~ f.centre_care.7+ n.birth_weight.7+ n.agebirth_m_y.7+ f.fam_splitup.0.7+ f.only_child.7+ f.sex.7+ f.edu_m_.0.7+ f.femp_cat_mom_0.7+f.flowincome.7+f.flowincome.7*f.centre_care.7",
                                  data = "ext_income_strat",
                                  family = "gaussian",
                                  datasources = c.data[c('generationR')])



# deviance without interaction
devext_5_6_adj_genr <- ext_5_6_adj_genr$output.summary$study1$deviance.resid

# deviance in model with interaction
devext_5_6_adj_genrext <- ext_5_6_adj_genrext$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.genr5_6 <- devext_5_6_adj_genr - devext_5_6_adj_genrext)


# this difference now needs to be "scaled". Scale parameter is given by:
(scalegenr5_6 <- devext_5_6_adj_genrext/ext_5_6_adj_genrext$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.genr5_6 <- dev.diff.genr5_6/scalegenr5_6)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.genr5_6 <- 1-pchisq(scaled.dev.genr5_6,1))




ext_7_9_adj_genr <- ds.glmSLMA(formula = "n.ext_pc_.10 ~ f.centre_care.10+ n.birth_weight.10+ n.agebirth_m_y.10+ f.fam_splitup.0.10+ f.only_child.10+ f.sex.10+ f.edu_m_.0.10+ f.femp_cat_mom_0.10+f.flowincome.10",
                               data = "ext_income_strat",
                               family = "gaussian",
                               datasources = c.data[c('generationR')])




ext_7_9_adj_genrext <- ds.glmSLMA(formula = "n.ext_pc_.10 ~ f.centre_care.10+ n.birth_weight.10+ n.agebirth_m_y.10+ f.fam_splitup.0.10+ f.only_child.10+ f.sex.10+ f.edu_m_.0.10+ f.femp_cat_mom_0.10+f.flowincome.10+f.flowincome.10*f.centre_care.10",
                                  data = "ext_income_strat",
                                  family = "gaussian",
                                  datasources = c.data[c('generationR')])



# deviance without interaction
devext_7_9_adj_genr <- ext_7_9_adj_genr$output.summary$study1$deviance.resid

# deviance in model with interaction
devext_7_9_adj_genrext <- ext_7_9_adj_genrext$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.genr7_9 <- devext_7_9_adj_genr - devext_7_9_adj_genrext)

# this difference now needs to be "scaled". Scale parameter is given by:
(scalegenr7_9 <- devext_7_9_adj_genrext/ext_7_9_adj_genrext$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.genr7_9 <- dev.diff.genr7_9/scalegenr7_9)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.genr7_9 <- 1-pchisq(scaled.dev.genr7_9,1))



ext_10_12_adj_genr <- ds.glmSLMA(formula = "n.ext_pc_.13 ~ f.centre_care.13+ n.birth_weight.13+ n.agebirth_m_y.13+ f.fam_splitup.0.13+ f.only_child.13+ f.sex.13+ f.edu_m_.0.13+ f.femp_cat_mom_0.13+f.flowincome.13",
                                 data = "ext_income_strat",
                                 family = "gaussian",
                                 datasources = c.data[c('generationR')])




ext_10_12_adj_genrext <- ds.glmSLMA(formula = "n.ext_pc_.13 ~ f.centre_care.13+ n.birth_weight.13+ n.agebirth_m_y.13+ f.fam_splitup.0.13+ f.only_child.13+ f.sex.13+ f.edu_m_.0.13+ f.femp_cat_mom_0.13+f.flowincome.13+f.flowincome.13*f.centre_care.13",
                                    data = "ext_income_strat",
                                    family = "gaussian",
                                    datasources = c.data[c('generationR')])



# deviance without interaction
devext_10_12_adj_genr <- ext_10_12_adj_genr$output.summary$study1$deviance.resid

# deviance in model with interaction
devext_10_12_adj_genrext <- ext_10_12_adj_genrext$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.genr10_12 <- devext_10_12_adj_genr - devext_10_12_adj_genrext)

# this difference now needs to be "scaled". Scale parameter is given by:
(scalegenr10_12 <- devext_10_12_adj_genrext/ext_10_12_adj_genrext$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.genr10_12 <- dev.diff.genr10_12/scalegenr10_12)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.genr10_12 <- 1-pchisq(scaled.dev.genr10_12,1))




#dnbc
ext_7_9_adj_dnbc <- ds.glmSLMA(formula = "n.ext_pc_.10 ~ f.centre_care.10+ n.birth_weight.10+ n.agebirth_m_y.10+ f.fam_splitup.0.10+f.only_child.10+ f.sex.10+ f.edu_m_.0.10+ f.femp_cat_mom_0.10+f.flowincome.10",
                               data = "ext_income_strat",
                               family = "gaussian",
                               datasources = c.data[c('dnbc')])

ext_7_9_adj_dnbcext <- ds.glmSLMA(formula = "n.ext_pc_.10 ~ f.centre_care.10+ n.birth_weight.10+ n.agebirth_m_y.10+ f.fam_splitup.0.10+f.only_child.10+ f.sex.10+ f.edu_m_.0.10+ f.femp_cat_mom_0.10+f.flowincome.10+f.flowincome.10*f.centre_care.10",
                                  data = "ext_income_strat",
                                  family = "gaussian",
                                  datasources = c.data[c('dnbc')])



#deviance without interaction
devext_7_9_adj_dnbc <- ext_7_9_adj_dnbc$output.summary$study1$deviance.resid

# deviance in model with interaction
devext_7_9_adj_dnbcext <- ext_7_9_adj_dnbcext$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.dnbc7_9 <- devext_7_9_adj_dnbc - devext_7_9_adj_dnbcext)

# this difference now needs to be "scaled". Scale parameter is given by:
(scalednbc7_9 <- devext_7_9_adj_dnbcext/ext_7_9_adj_dnbcext$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.dnbc7_9 <- dev.diff.dnbc7_9/scalednbc7_9)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.dnbc7_9 <- 1-pchisq(scaled.dev.dnbc7_9,1))


ext_10_12_adj_dnbc <- ds.glmSLMA(formula = "n.ext_pc_.13 ~ f.centre_care.13+ n.birth_weight.13+ n.agebirth_m_y.13+ f.fam_splitup.0.13+f.only_child.13+ f.sex.13+ f.edu_m_.0.13+ f.femp_cat_mom_0.13+f.flowincome.13",
                                 data = "ext_income_strat",
                                 family = "gaussian",
                                 datasources = c.data[c('dnbc')])

ext_10_12_adj_dnbcext <- ds.glmSLMA(formula = "n.ext_pc_.13 ~ f.centre_care.13+ n.birth_weight.13+ n.agebirth_m_y.13+ f.fam_splitup.0.13+f.only_child.13+ f.sex.13+ f.edu_m_.0.13+ f.femp_cat_mom_0.13+f.flowincome.13+f.flowincome.13*f.centre_care.13",
                                    data = "ext_income_strat",
                                    family = "gaussian",
                                    datasources = c.data[c('dnbc')])



#deviance without interaction
devext_10_12_adj_dnbc <- ext_10_12_adj_dnbc$output.summary$study1$deviance.resid

# deviance in model with interaction
devext_10_12_adj_dnbcext <- ext_10_12_adj_dnbcext$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.dnbc10_12 <- devext_10_12_adj_dnbc - devext_10_12_adj_dnbcext)

# this difference now needs to be "scaled". Scale parameter is given by:
(scalednbc10_12 <- devext_10_12_adj_dnbcext/ext_10_12_adj_dnbcext$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.dnbc10_12 <- dev.diff.dnbc10_12/scalednbc10_12)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.dnbc10_12 <- 1-pchisq(scaled.dev.dnbc10_12,1))


ext_13_18_adj_dnbc <- ds.glmSLMA(formula = "n.ext_pc_.18 ~ f.centre_care.18+ n.birth_weight.18+ n.agebirth_m_y.18+f.only_child.18+ f.sex.18+ f.edu_m_.0.18+ f.femp_cat_mom_0.18+f.flowincome.18",
                                 data = "ext_income_strat",
                                 family = "gaussian",
                                 datasources = c.data[c('dnbc')])


ext_13_18_adj_dnbcext <- ds.glmSLMA(formula = "n.ext_pc_.18 ~ f.centre_care.18+ n.birth_weight.18+ n.agebirth_m_y.18+f.only_child.18+ f.sex.18+ f.edu_m_.0.18+ f.femp_cat_mom_0.18+f.flowincome.18+f.flowincome.18*f.centre_care.18",
                                    data = "ext_income_strat",
                                    family = "gaussian",
                                    datasources = c.data[c('dnbc')])



#deviance without interaction
devext_13_18_adj_dnbc <- ext_13_18_adj_dnbc$output.summary$study1$deviance.resid

# deviance in model with interaction
devext_13_18_adj_dnbcext <- ext_13_18_adj_dnbcext$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.dnbc13_18 <- devext_13_18_adj_dnbc - devext_13_18_adj_dnbcext)

# this difference now needs to be "scaled". Scale parameter is given by:
(scalednbc13_18 <- devext_13_18_adj_dnbcext/ext_13_18_adj_dnbcext$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.dnbc13_18 <- dev.diff.dnbc13_18/scalednbc13_18)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.dnbc13_18 <- 1-pchisq(scaled.dev.dnbc13_18,1))



# INMA
ext_7_9_adj_inma <- ds.glmSLMA(formula = "n.ext_pc_.10 ~ f.centre_care.10+ n.birth_weight.10+ n.agebirth_m_y.10+ f.only_child.10+ f.sex.10+ f.edu_m_.0.10+ f.femp_cat_mom_0.10+f.flowincome.10",
                               data = "ext_income_strat",
                               family = "gaussian",
                               datasources = c.data[c('INMA')])




ext_7_9_adj_inmaext <- ds.glmSLMA(formula = "n.ext_pc_.10 ~ f.centre_care.10+ n.birth_weight.10+ n.agebirth_m_y.10+ f.only_child.10+ f.sex.10+ f.edu_m_.0.10+ f.femp_cat_mom_0.10+f.flowincome.10+f.flowincome.10*f.centre_care.10",
                                  data = "ext_income_strat",
                                  family = "gaussian",
                                  datasources = c.data[c('INMA')])



# deviance without interaction
devext_7_9_adj_inma <- ext_7_9_adj_inma$output.summary$study1$deviance.resid

# deviance in model with interaction
devext_7_9_adj_inmaext <- ext_7_9_adj_inmaext$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.inma7_9 <- devext_7_9_adj_inma - devext_7_9_adj_inmaext)

# this difference now needs to be "scaled". Scale parameter is given by:
(scaleinma7_9 <- devext_7_9_adj_inmaext/ext_7_9_adj_inmaext$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.inma7_9 <- dev.diff.inma7_9/scaleinma7_9)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.inma7_9 <- 1-pchisq(scaled.dev.inma7_9,1))



ext_10_12_adj_inma <- ds.glmSLMA(formula = "n.ext_pc_.13 ~ f.centre_care.13+ n.birth_weight.13+ n.agebirth_m_y.13+ f.only_child.13+ f.sex.13+ f.edu_m_.0.13+ f.femp_cat_mom_0.13+f.flowincome.13",
                                 data = "ext_income_strat",
                                 family = "gaussian",
                                 datasources = c.data[c('INMA')])




ext_10_12_adj_inmaext <- ds.glmSLMA(formula = "n.ext_pc_.13 ~ f.centre_care.13+ n.birth_weight.13+ n.agebirth_m_y.13+ f.only_child.13+ f.sex.13+ f.edu_m_.0.13+ f.femp_cat_mom_0.13+f.flowincome.13+f.flowincome.13*f.centre_care.13",
                                    data = "ext_income_strat",
                                    family = "gaussian",
                                    datasources = c.data[c('INMA')])



# deviance without interaction
devext_10_12_adj_inma <- ext_10_12_adj_inma$output.summary$study1$deviance.resid

# deviance in model with interaction
devext_10_12_adj_inmaext <- ext_10_12_adj_inmaext$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.inma10_12 <- devext_10_12_adj_inma - devext_10_12_adj_inmaext)

# this difference now needs to be "scaled". Scale parameter is given by:
(scaleinma10_12 <- devext_10_12_adj_inmaext/ext_10_12_adj_inmaext$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.inma10_12 <- dev.diff.inma10_12/scaleinma10_12)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.inma10_12 <- 1-pchisq(scaled.dev.inma10_12,1))


# EDEN

ext_5_6_adj_eden <- ds.glmSLMA(formula = "n.ext_pc_.7 ~ f.centre_care.7+ n.birth_weight.7+ n.agebirth_m_y.7+ f.fam_splitup.0.7+ f.only_child.7+ f.sex.7+ f.edu_m_.0.7+ f.femp_cat_mom_0.7+f.flowincome.7",
                               data = "ext_income_strat",
                               family = "gaussian",
                               datasources = c.data[c('eden')])




ext_5_6_adj_edenext <- ds.glmSLMA(formula = "n.ext_pc_.7 ~ f.centre_care.7+ n.birth_weight.7+ n.agebirth_m_y.7+ f.fam_splitup.0.7+ f.only_child.7+ f.sex.7+ f.edu_m_.0.7+ f.femp_cat_mom_0.7+f.flowincome.7+f.flowincome.7*f.centre_care.7",
                                  data = "ext_income_strat",
                                  family = "gaussian",
                                  datasources = c.data[c('eden')])



# deviance without interaction
devext_5_6_adj_eden <- ext_5_6_adj_eden$output.summary$study1$deviance.resid

# deviance in model with interaction
devext_5_6_adj_edenext <- ext_5_6_adj_edenext$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.eden5_6 <- devext_5_6_adj_eden - devext_5_6_adj_edenext)

# this difference now needs to be "scaled". Scale parameter is given by:
(scaleeden5_6 <- devext_5_6_adj_edenext/ext_5_6_adj_edenext$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.eden5_6 <- dev.diff.eden5_6/scaleeden5_6)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.eden5_6 <- 1-pchisq(scaled.dev.eden5_6,1))


ext_7_9_adj_eden <- ds.glmSLMA(formula = "n.ext_pc_.10 ~ f.centre_care.10+ n.birth_weight.10+ n.agebirth_m_y.10+ f.fam_splitup.0.10+ f.only_child.10+ f.sex.10+ f.edu_m_.0.10+ f.femp_cat_mom_0.10+f.flowincome.10",
                               data = "ext_income_strat",
                               family = "gaussian",
                               datasources = c.data[c('eden')])




ext_7_9_adj_edenext <- ds.glmSLMA(formula = "n.ext_pc_.10 ~ f.centre_care.10+ n.birth_weight.10+ n.agebirth_m_y.10+ f.fam_splitup.0.10+ f.only_child.10+ f.sex.10+ f.edu_m_.0.10+ f.femp_cat_mom_0.10+f.flowincome.10+f.flowincome.10*f.centre_care.10",
                                  data = "ext_income_strat",
                                  family = "gaussian",
                                  datasources = c.data[c('eden')])



# deviance without interaction
devext_7_9_adj_eden <- ext_7_9_adj_eden$output.summary$study1$deviance.resid

# deviance in model with interaction
devext_7_9_adj_edenext <- ext_7_9_adj_edenext$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.eden7_9 <- devext_7_9_adj_eden - devext_7_9_adj_edenext)

# this difference now needs to be "scaled". Scale parameter is given by:
(scaleeden7_9 <- devext_7_9_adj_edenext/ext_7_9_adj_edenext$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.eden7_9 <- dev.diff.eden7_9/scaleeden7_9)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.eden7_9 <- 1-pchisq(scaled.dev.eden7_9,1))


# ELFE

ext_5_6_adj_elfe <- ds.glmSLMA(formula = "n.ext_pc_.7 ~ f.centre_care.7+ n.birth_weight.7+ n.agebirth_m_y.7+ f.fam_splitup.0.7+ f.only_child.7+ f.sex.7+ f.edu_m_.0.7+ f.femp_cat_mom_0.7+f.flowincome.7",
                               data = "ext_income_strat",
                               family = "gaussian",
                               datasources = c.data[c('elfe')])




ext_5_6_adj_elfeext <- ds.glmSLMA(formula = "n.ext_pc_.7 ~ f.centre_care.7+ n.birth_weight.7+ n.agebirth_m_y.7+ f.fam_splitup.0.7+ f.only_child.7+ f.sex.7+ f.edu_m_.0.7+ f.femp_cat_mom_0.7+f.flowincome.7+f.flowincome.7*f.centre_care.7",
                                  data = "ext_income_strat",
                                  family = "gaussian",
                                  datasources = c.data[c('elfe')])



# deviance without interaction
devext_5_6_adj_elfe <- ext_5_6_adj_elfe$output.summary$study1$deviance.resid

# deviance in model with interaction
devext_5_6_adj_elfeext <- ext_5_6_adj_elfeext$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.elfe5_6 <- devext_5_6_adj_elfe - devext_5_6_adj_elfeext)

# this difference now needs to be "scaled". Scale parameter is given by:
(scaleelfe5_6 <- devext_5_6_adj_elfeext/ext_5_6_adj_elfeext$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.elfe5_6 <- dev.diff.elfe5_6/scaleelfe5_6)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.elfe5_6 <- 1-pchisq(scaled.dev.elfe5_6,1))


# NINFEA

ext_10_12_adj_ninfea <- ds.glmSLMA(formula = "n.ext_pc_.13 ~ f.centre_care.13+ n.birth_weight.13+ n.agebirth_m_y.13+ f.only_child.13+ f.sex.13+ f.femp_cat_mom_0.13+f.flowincome.13",
                                   data = "ext_income_strat",
                                   family = "gaussian",
                                   datasources = c.data[c('ninfea')])




ext_10_12_adj_ninfeaext <- ds.glmSLMA(formula = "n.ext_pc_.13 ~ f.centre_care.13+ n.birth_weight.13+ n.agebirth_m_y.13+ f.only_child.13+ f.sex.13+ f.femp_cat_mom_0.13+f.flowincome.13+f.flowincome.13*f.centre_care.13",
                                      data = "ext_income_strat",
                                      family = "gaussian",
                                      datasources = c.data[c('ninfea')])



# deviance without interaction
devext_10_12_adj_ninfea <- ext_10_12_adj_ninfea$output.summary$study1$deviance.resid

# deviance in model with interaction
devext_10_12_adj_ninfeaext <- ext_10_12_adj_ninfeaext$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.ninfea10_12 <- devext_10_12_adj_ninfea - devext_10_12_adj_ninfeaext)

# this difference now needs to be "scaled". Scale parameter is given by:
(scaleninfea10_12 <- devext_10_12_adj_ninfeaext/ext_10_12_adj_ninfeaext$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.ninfea10_12 <- dev.diff.ninfea10_12/scaleninfea10_12)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.ninfea10_12 <- 1-pchisq(scaled.dev.ninfea10_12,1))


ext_13_18_adj_ninfea <- ds.glmSLMA(formula = "n.ext_pc_.18 ~ f.centre_care.18+ n.birth_weight.18+ n.agebirth_m_y.18+ f.only_child.18+ f.sex.18+ f.edu_m_.0.18+ f.femp_cat_mom_0.18+f.flowincome.18",
                                   data = "ext_income_strat",
                                   family = "gaussian",
                                   datasources = c.data[c('ninfea')])




ext_13_18_adj_ninfeaext <- ds.glmSLMA(formula = "n.ext_pc_.18 ~ f.centre_care.18+ n.birth_weight.18+ n.agebirth_m_y.18+ f.only_child.18+ f.sex.18+ f.edu_m_.0.18+ f.femp_cat_mom_0.18+f.flowincome.18+f.flowincome.18*f.centre_care.18",
                                      data = "ext_income_strat",
                                      family = "gaussian",
                                      datasources = c.data[c('ninfea')])



# deviance without interaction
devext_13_18_adj_ninfea <- ext_13_18_adj_ninfea$output.summary$study1$deviance.resid

# deviance in model with interaction
devext_13_18_adj_ninfeaext <- ext_13_18_adj_ninfeaext$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.ninfea13_18 <- devext_13_18_adj_ninfea - devext_13_18_adj_ninfeaext)

# this difference now needs to be "scaled". Scale parameter is given by:
(scaleninfea13_18 <- devext_13_18_adj_ninfeaext/ext_13_18_adj_ninfeaext$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.ninfea13_18 <- dev.diff.ninfea13_18/scaleninfea13_18)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.ninfea13_18 <- 1-pchisq(scaled.dev.ninfea13_18,1))


## to collect sample sizes
ds.dim('ext_income_strat')
ds.colnames('ext_income_strat')
ds.mean('ext_income_strat$n.ext_pc_.7')
ds.mean('ext_income_strat$n.ext_pc_.10')
ds.mean('ext_income_strat$n.ext_pc_.13')
ds.mean('ext_income_strat$n.ext_pc_.18')





c.data <- DSI::datashield.login(logins = logindata, restore="ppd_int_strata")

### compare log likelihood using chi-square test



# model without interaction
int_5_6_adj_alspac<-ds.glmSLMA(formula = "n.int_pc_.7 ~ f.centre_care.7+ n.birth_weight.7+ n.agebirth_m_y.7+ f.fam_splitup.0.7+ f.only_child.7+ f.sex.7+ f.edu_m_.0.7+ f.mom.emp.dich.7+f.ppd.7",
                               data = "int_ppdmother_strat",
                               family = "gaussian",
                               datasources = c.data[c('alspac')])

# model with interaction

int_5_6_adj_alspacint <- ds.glmSLMA(formula = "n.int_pc_.7 ~ f.centre_care.7+ n.birth_weight.7+ n.agebirth_m_y.7+ f.fam_splitup.0.7+ f.only_child.7+ f.sex.7+ f.edu_m_.0.7+ f.mom.emp.dich.7+f.ppd.7+f.ppd.7*f.centre_care.7",
                                    data = "int_ppdmother_strat",
                                    family = "gaussian",
                                    datasources = c.data[c('alspac')])

# deviance without interaction
devint_5_6_adj_alspac <- int_5_6_adj_alspac$output.summary$study1$deviance.resid

# deviance in model with interaction
devint_5_6_adj_alspacint <- int_5_6_adj_alspacint$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.alspac56 <- devint_5_6_adj_alspac - devint_5_6_adj_alspacint)

# this difference now needs to be "scaled". Scale parameter is given by:
(scalealspac56 <- devint_5_6_adj_alspacint/int_5_6_adj_alspacint$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.alspac.56 <- dev.diff.alspac56/scalealspac56)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.alspac.56 <- 1-pchisq(scaled.dev.alspac.56,1))

# model          Resid. Dev            
# no int         5625327.70
# int            5625318.36

#p value
# 0.9227695


int_7_9_adj_alspac <- ds.glmSLMA(formula = "n.int_pc_.10 ~ f.centre_care.10+ n.birth_weight.10+ n.agebirth_m_y.10+ f.fam_splitup.0.10+f.only_child.10+ f.sex.10+ f.edu_m_.0.10+ f.mom.emp.dich.10+f.ppd.10",
                                 data = "int_ppdmother_strat",
                                 family = "gaussian",
                                 datasources = c.data[c('alspac')])

int_7_9_adj_alspacint <- ds.glmSLMA(formula = "n.int_pc_.10 ~ f.centre_care.10+ n.birth_weight.10+ n.agebirth_m_y.10+ f.fam_splitup.0.10+f.only_child.10 + f.sex.10+ f.edu_m_.0.10+ f.mom.emp.dich.10+f.ppd.10+f.ppd.10*f.centre_care.10",
                                    data = "int_ppdmother_strat",
                                    family = "gaussian",
                                    datasources = c.data[c('alspac')])



# deviance without interaction
devint_7_9_adj_alspac <- int_7_9_adj_alspac$output.summary$study1$deviance.resid
devint_7_9_adj_alspac
# deviance in model with interaction
devint_7_9_adj_alspacint <- int_7_9_adj_alspacint$output.summary$study1$deviance.resid
devint_7_9_adj_alspacint
# difference in deviance
(dev.diff.alspac7_9 <- devint_7_9_adj_alspac - devint_7_9_adj_alspacint)

# this difference now needs to be "scaled". Scale parameter is given by:
(scalealspac7_9 <- devint_7_9_adj_alspacint/int_7_9_adj_alspacint$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.alspac.7_9 <- dev.diff.alspac7_9/scalealspac7_9)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.alspac.7_9 <- 1-pchisq(scaled.dev.alspac.7_9,1))



int_10_12_adj_alspac <- ds.glmSLMA(formula = "n.int_pc_.13 ~ f.centre_care.13+ n.birth_weight.13+ n.agebirth_m_y.13+ f.fam_splitup.0.13+f.only_child.13+ f.sex.13+ f.edu_m_.0.13+ f.mom.emp.dich.13+f.ppd.13",
                                   data = "int_ppdmother_strat",
                                   family = "gaussian",
                                   datasources = c.data[c('alspac')])

int_10_12_adj_alspacint <- ds.glmSLMA(formula = "n.int_pc_.13 ~ f.centre_care.13+ n.birth_weight.13+ n.agebirth_m_y.13+ f.fam_splitup.0.13+f.only_child.13+ f.sex.13+ f.edu_m_.0.13+ f.mom.emp.dich.13+f.ppd.13+f.ppd.13*f.centre_care.13",
                                      data = "int_ppdmother_strat",
                                      family = "gaussian",
                                      datasources = c.data[c('alspac')])



# deviance without interaction
devint_10_12_adj_alspac <- int_10_12_adj_alspac$output.summary$study1$deviance.resid

# deviance in model with interaction
devint_10_12_adj_alspacint <- int_10_12_adj_alspacint$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.alspac10_12 <- devint_10_12_adj_alspac - devint_10_12_adj_alspacint)

# this difference now needs to be "scaled". Scale parameter is given by:
(scalealspac10_12 <- devint_10_12_adj_alspacint/int_10_12_adj_alspacint$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.alspac.10_12 <- dev.diff.alspac10_12/scalealspac10_12)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.alspac.10_12 <- 1-pchisq(scaled.dev.alspac.10_12,1))




int_13_18_adj_alspac <- ds.glmSLMA(formula = "n.int_pc_.18 ~ f.centre_care.18+ n.birth_weight.18+ n.agebirth_m_y.18+ f.fam_splitup.0.18+f.only_child.18+ f.sex.18+ f.edu_m_.0.18+ f.mom.emp.dich.18+f.ppd.18",
                                   data = "int_ppdmother_strat",
                                   family = "gaussian",
                                   datasources = c.data[c('alspac')])

int_13_18_adj_alspacint <- ds.glmSLMA(formula = "n.int_pc_.18 ~ f.centre_care.18+ n.birth_weight.18+ n.agebirth_m_y.18+ f.fam_splitup.0.18+f.only_child.18+ f.sex.18+ f.edu_m_.0.18+ f.mom.emp.dich.18+f.ppd.18+f.ppd.18*f.centre_care.18",
                                      data = "int_ppdmother_strat",
                                      family = "gaussian",
                                      datasources = c.data[c('alspac')])



# deviance without interaction
devint_13_18_adj_alspac <- int_13_18_adj_alspac$output.summary$study1$deviance.resid

# deviance in model with interaction
devint_13_18_adj_alspacint <- int_13_18_adj_alspacint$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.alspac13_18 <- devint_13_18_adj_alspac - devint_13_18_adj_alspacint)

# this difference now needs to be "scaled". Scale parameter is given by:
(scalealspac13_18 <- devint_13_18_adj_alspacint/int_13_18_adj_alspacint$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.alspac.13_18 <- dev.diff.alspac13_18/scalealspac13_18)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.alspac.13_18 <- 1-pchisq(scaled.dev.alspac.13_18,1))






#genr
int_5_6_adj_genr <- ds.glmSLMA(formula = "n.int_pc_.7 ~ f.centre_care.7+ n.birth_weight.7+ n.agebirth_m_y.7+ f.fam_splitup.0.7+ f.only_child.7+ f.sex.7+ f.edu_m_.0.7+ f.femp_cat_mom_0.7+f.ppd.7",
                               data = "int_ppdmother_strat",
                               family = "gaussian",
                               datasources = c.data[c('generationR')])




int_5_6_adj_genrint <- ds.glmSLMA(formula = "n.int_pc_.7 ~ f.centre_care.7+ n.birth_weight.7+ n.agebirth_m_y.7+ f.fam_splitup.0.7+ f.only_child.7+ f.sex.7+ f.edu_m_.0.7+ f.femp_cat_mom_0.7+f.ppd.7+f.ppd.7*f.centre_care.7",
                                  data = "int_ppdmother_strat",
                                  family = "gaussian",
                                  datasources = c.data[c('generationR')])



# deviance without interaction
devint_5_6_adj_genr <- int_5_6_adj_genr$output.summary$study1$deviance.resid

# deviance in model with interaction
devint_5_6_adj_genrint <- int_5_6_adj_genrint$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.genr5_6 <- devint_5_6_adj_genr - devint_5_6_adj_genrint)

# this difference now needs to be "scaled". Scale parameter is given by:
(scalegenr5_6 <- devint_5_6_adj_genrint/int_5_6_adj_genrint$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.genr5_6 <- dev.diff.genr5_6/scalegenr5_6)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.genr5_6 <- 1-pchisq(scaled.dev.genr5_6,1))




int_7_9_adj_genr <- ds.glmSLMA(formula = "n.int_pc_.10 ~ f.centre_care.10+ n.birth_weight.10+ n.agebirth_m_y.10+ f.fam_splitup.0.10+ f.only_child.10+ f.sex.10+ f.edu_m_.0.10+ f.femp_cat_mom_0.10+f.ppd.10",
                               data = "int_ppdmother_strat",
                               family = "gaussian",
                               datasources = c.data[c('generationR')])




int_7_9_adj_genrint <- ds.glmSLMA(formula = "n.int_pc_.10 ~ f.centre_care.10+ n.birth_weight.10+ n.agebirth_m_y.10+ f.fam_splitup.0.10+ f.only_child.10+ f.sex.10+ f.edu_m_.0.10+ f.femp_cat_mom_0.10+f.ppd.10+f.ppd.10*f.centre_care.10",
                                  data = "int_ppdmother_strat",
                                  family = "gaussian",
                                  datasources = c.data[c('generationR')])



# deviance without interaction
devint_7_9_adj_genr <- int_7_9_adj_genr$output.summary$study1$deviance.resid

# deviance in model with interaction
devint_7_9_adj_genrint <- int_7_9_adj_genrint$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.genr7_9 <- devint_7_9_adj_genr - devint_7_9_adj_genrint)

# this difference now needs to be "scaled". Scale parameter is given by:
(scalegenr7_9 <- devint_7_9_adj_genrint/int_7_9_adj_genrint$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.genr7_9 <- dev.diff.genr7_9/scalegenr7_9)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.genr7_9 <- 1-pchisq(scaled.dev.genr7_9,1))



int_10_12_adj_genr <- ds.glmSLMA(formula = "n.int_pc_.13 ~ f.centre_care.13+ n.birth_weight.13+ n.agebirth_m_y.13+ f.fam_splitup.0.13+ f.only_child.13+ f.sex.13+ f.edu_m_.0.13+ f.femp_cat_mom_0.13+f.ppd.13",
                                 data = "int_ppdmother_strat",
                                 family = "gaussian",
                                 datasources = c.data[c('generationR')])




int_10_12_adj_genrint <- ds.glmSLMA(formula = "n.int_pc_.13 ~ f.centre_care.13+ n.birth_weight.13+ n.agebirth_m_y.13+ f.fam_splitup.0.13+ f.only_child.13+ f.sex.13+ f.edu_m_.0.13+ f.femp_cat_mom_0.13+f.ppd.13+f.ppd.13*f.centre_care.13",
                                    data = "int_ppdmother_strat",
                                    family = "gaussian",
                                    datasources = c.data[c('generationR')])



# deviance without interaction
devint_10_12_adj_genr <- int_10_12_adj_genr$output.summary$study1$deviance.resid

# deviance in model with interaction
devint_10_12_adj_genrint <- int_10_12_adj_genrint$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.genr10_12 <- devint_10_12_adj_genr - devint_10_12_adj_genrint)

# this difference now needs to be "scaled". Scale parameter is given by:
(scalegenr10_12 <- devint_10_12_adj_genrint/int_10_12_adj_genrint$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.genr10_12 <- dev.diff.genr10_12/scalegenr10_12)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.genr10_12 <- 1-pchisq(scaled.dev.genr10_12,1))




#dnbc
int_7_9_adj_dnbc <- ds.glmSLMA(formula = "n.int_pc_.10 ~ f.centre_care.10+ n.birth_weight.10+ n.agebirth_m_y.10+ f.fam_splitup.0.10+f.only_child.10+ f.sex.10+ f.edu_m_.0.10+ f.femp_cat_mom_0.10+f.ppd.10",
                               data = "int_ppdmother_strat",
                               family = "gaussian",
                               datasources = c.data[c('dnbc')])

int_7_9_adj_dnbcint <- ds.glmSLMA(formula = "n.int_pc_.10 ~ f.centre_care.10+ n.birth_weight.10+ n.agebirth_m_y.10+ f.fam_splitup.0.10+f.only_child.10+ f.sex.10+ f.edu_m_.0.10+ f.femp_cat_mom_0.10+f.ppd.10+f.ppd.10*f.centre_care.10",
                                  data = "int_ppdmother_strat",
                                  family = "gaussian",
                                  datasources = c.data[c('dnbc')])



#deviance without interaction
devint_7_9_adj_dnbc <- int_7_9_adj_dnbc$output.summary$study1$deviance.resid

# deviance in model with interaction
devint_7_9_adj_dnbcint <- int_7_9_adj_dnbcint$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.dnbc7_9 <- devint_7_9_adj_dnbc - devint_7_9_adj_dnbcint)

# this difference now needs to be "scaled". Scale parameter is given by:
(scalednbc7_9 <- devint_7_9_adj_dnbcint/int_7_9_adj_dnbcint$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.dnbc7_9 <- dev.diff.dnbc7_9/scalednbc7_9)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.dnbc7_9 <- 1-pchisq(scaled.dev.dnbc7_9,1))


int_10_12_adj_dnbc <- ds.glmSLMA(formula = "n.int_pc_.13 ~ f.centre_care.13+ n.birth_weight.13+ n.agebirth_m_y.13+ f.fam_splitup.0.13+f.only_child.13+ f.sex.13+ f.edu_m_.0.13+ f.femp_cat_mom_0.13+f.ppd.13",
                                 data = "int_ppdmother_strat",
                                 family = "gaussian",
                                 datasources = c.data[c('dnbc')])

int_10_12_adj_dnbcint <- ds.glmSLMA(formula = "n.int_pc_.13 ~ f.centre_care.13+ n.birth_weight.13+ n.agebirth_m_y.13+ f.fam_splitup.0.13+f.only_child.13+ f.sex.13+ f.edu_m_.0.13+ f.femp_cat_mom_0.13+f.ppd.13+f.ppd.13*f.centre_care.13",
                                    data = "int_ppdmother_strat",
                                    family = "gaussian",
                                    datasources = c.data[c('dnbc')])



#deviance without interaction
devint_10_12_adj_dnbc <- int_10_12_adj_dnbc$output.summary$study1$deviance.resid

# deviance in model with interaction
devint_10_12_adj_dnbcint <- int_10_12_adj_dnbcint$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.dnbc10_12 <- devint_10_12_adj_dnbc - devint_10_12_adj_dnbcint)

# this difference now needs to be "scaled". Scale parameter is given by:
(scalednbc10_12 <- devint_10_12_adj_dnbcint/int_10_12_adj_dnbcint$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.dnbc10_12 <- dev.diff.dnbc10_12/scalednbc10_12)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.dnbc10_12 <- 1-pchisq(scaled.dev.dnbc10_12,1))

int_13_18_adj_dnbc <- ds.glmSLMA(formula = "n.int_pc_.18 ~ f.centre_care.18+ n.birth_weight.18+ n.agebirth_m_y.18+f.only_child.18+ f.sex.18+ f.edu_m_.0.18+ f.femp_cat_mom_0.18+f.ppd.18",
                                 data = "int_ppdmother_strat",
                                 family = "gaussian",
                                 datasources = c.data[c('dnbc')])

int_13_18_adj_dnbcint <- ds.glmSLMA(formula = "n.int_pc_.18 ~ f.centre_care.18+ n.birth_weight.18+ n.agebirth_m_y.18+f.only_child.18+ f.sex.18+ f.edu_m_.0.18+ f.femp_cat_mom_0.18+f.ppd.18+f.ppd.18*f.centre_care.18",
                                    data = "int_ppdmother_strat",
                                    family = "gaussian",
                                    datasources = c.data[c('dnbc')])



#deviance without interaction
devint_13_18_adj_dnbc <- int_13_18_adj_dnbc$output.summary$study1$deviance.resid

# deviance in model with interaction
devint_13_18_adj_dnbcint <- int_13_18_adj_dnbcint$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.dnbc13_18 <- devint_13_18_adj_dnbc - devint_13_18_adj_dnbcint)

# this difference now needs to be "scaled". Scale parameter is given by:
(scalednbc13_18 <- devint_13_18_adj_dnbcint/int_13_18_adj_dnbcint$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.dnbc13_18 <- dev.diff.dnbc13_18/scalednbc13_18)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.dnbc13_18 <- 1-pchisq(scaled.dev.dnbc13_18,1))






# EDEN

int_5_6_adj_eden <- ds.glmSLMA(formula = "n.int_pc_.7 ~ f.centre_care.7+ n.birth_weight.7+ n.agebirth_m_y.7+ f.fam_splitup.0.7+ f.only_child.7+ f.sex.7+ f.edu_m_.0.7+ f.femp_cat_mom_0.7+f.ppd.7",
                               data = "int_ppdmother_strat",
                               family = "gaussian",
                               datasources = c.data[c('eden')])




int_5_6_adj_edenint <- ds.glmSLMA(formula = "n.int_pc_.7 ~ f.centre_care.7+ n.birth_weight.7+ n.agebirth_m_y.7+ f.fam_splitup.0.7+ f.only_child.7+ f.sex.7+ f.edu_m_.0.7+ f.femp_cat_mom_0.7+f.ppd.7+f.ppd.7*f.centre_care.7",
                                  data = "int_ppdmother_strat",
                                  family = "gaussian",
                                  datasources = c.data[c('eden')])



# deviance without interaction
devint_5_6_adj_eden <- int_5_6_adj_eden$output.summary$study1$deviance.resid

# deviance in model with interaction
devint_5_6_adj_edenint <- int_5_6_adj_edenint$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.eden5_6 <- devint_5_6_adj_eden - devint_5_6_adj_edenint)

# this difference now needs to be "scaled". Scale parameter is given by:
(scaleeden5_6 <- devint_5_6_adj_edenint/int_5_6_adj_edenint$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.eden5_6 <- dev.diff.eden5_6/scaleeden5_6)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.eden5_6 <- 1-pchisq(scaled.dev.eden5_6,1))


int_7_9_adj_eden <- ds.glmSLMA(formula = "n.int_pc_.10 ~ f.centre_care.10+ n.birth_weight.10+ n.agebirth_m_y.10+ f.fam_splitup.0.10+ f.only_child.10+ f.sex.10+ f.edu_m_.0.10+ f.femp_cat_mom_0.10+f.ppd.10",
                               data = "int_ppdmother_strat",
                               family = "gaussian",
                               datasources = c.data[c('eden')])




int_7_9_adj_edenint <- ds.glmSLMA(formula = "n.int_pc_.10 ~ f.centre_care.10+ n.birth_weight.10+ n.agebirth_m_y.10+ f.fam_splitup.0.10+ f.only_child.10+ f.sex.10+ f.edu_m_.0.10+ f.femp_cat_mom_0.10+f.ppd.10+f.ppd.10*f.centre_care.10",
                                  data = "int_ppdmother_strat",
                                  family = "gaussian",
                                  datasources = c.data[c('eden')])



# deviance without interaction
devint_7_9_adj_eden <- int_7_9_adj_eden$output.summary$study1$deviance.resid

# deviance in model with interaction
devint_7_9_adj_edenint <- int_7_9_adj_edenint$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.eden7_9 <- devint_7_9_adj_eden - devint_7_9_adj_edenint)

# this difference now needs to be "scaled". Scale parameter is given by:
(scaleeden7_9 <- devint_7_9_adj_edenint/int_7_9_adj_edenint$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.eden7_9 <- dev.diff.eden7_9/scaleeden7_9)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.eden7_9 <- 1-pchisq(scaled.dev.eden7_9,1))


# ELFE

int_5_6_adj_elfe <- ds.glmSLMA(formula = "n.int_pc_.7 ~ f.centre_care.7+ n.birth_weight.7+ n.agebirth_m_y.7+ f.fam_splitup.0.7+ f.only_child.7+ f.sex.7+ f.edu_m_.0.7+ f.femp_cat_mom_0.7+f.ppd.7",
                               data = "int_ppdmother_strat",
                               family = "gaussian",
                               datasources = c.data[c('elfe')])




int_5_6_adj_elfeint <- ds.glmSLMA(formula = "n.int_pc_.7 ~ f.centre_care.7+ n.birth_weight.7+ n.agebirth_m_y.7+ f.fam_splitup.0.7+ f.only_child.7+ f.sex.7+ f.edu_m_.0.7+ f.femp_cat_mom_0.7+f.ppd.7+f.ppd.7*f.centre_care.7",
                                  data = "int_ppdmother_strat",
                                  family = "gaussian",
                                  datasources = c.data[c('elfe')])



# deviance without interaction
devint_5_6_adj_elfe <- int_5_6_adj_elfe$output.summary$study1$deviance.resid

# deviance in model with interaction
devint_5_6_adj_elfeint <- int_5_6_adj_elfeint$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.elfe5_6 <- devint_5_6_adj_elfe - devint_5_6_adj_elfeint)

# this difference now needs to be "scaled". Scale parameter is given by:
(scaleelfe5_6 <- devint_5_6_adj_elfeint/int_5_6_adj_elfeint$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.elfe5_6 <- dev.diff.elfe5_6/scaleelfe5_6)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.elfe5_6 <- 1-pchisq(scaled.dev.elfe5_6,1))





## to collect sample sizes
ds.dim('int_ppdmother_strat')
ds.colnames('int_ppdmother_strat')
ds.mean('int_ppdmother_strat$n.int_pc_.7')
ds.mean('int_ppdmother_strat$n.int_pc_.10')
ds.mean('int_ppdmother_strat$n.int_pc_.13')
ds.mean('int_ppdmother_strat$n.int_pc_.18')




library(DSMolgenisArmadillo)
library(dsBaseClient)
library(dsHelper)
library(DSI)
library(DSOpal)
library('stringr')
#login to all cohorts



### compare log likelihood using chi-square test
c.data <- DSI::datashield.login(logins = logindata, restore="ppd_ext_strata")



# model without exteraction
ext_5_6_adj_alspac<-ds.glmSLMA(formula = "n.ext_pc_.7 ~ f.centre_care.7+ n.birth_weight.7+ n.agebirth_m_y.7+ f.fam_splitup.0.7+ f.only_child.7+ f.sex.7+ f.edu_m_.0.7+ f.mom.emp.dich.7+f.ppd.7",
                               data = "ext_ppdmother_strat",
                               family = "gaussian",
                               datasources = c.data[c('alspac')])

# model with exteraction

ext_5_6_adj_alspacext <- ds.glmSLMA(formula = "n.ext_pc_.7 ~ f.centre_care.7+ n.birth_weight.7+ n.agebirth_m_y.7+ f.fam_splitup.0.7+ f.only_child.7+ f.sex.7+ f.edu_m_.0.7+ f.mom.emp.dich.7+f.ppd.7+f.ppd.7*f.centre_care.7",
                                    data = "ext_ppdmother_strat",
                                    family = "gaussian",
                                    datasources = c.data[c('alspac')])

# deviance without exteraction
devext_5_6_adj_alspac <- ext_5_6_adj_alspac$output.summary$study1$deviance.resid

# deviance in model with exteraction
devext_5_6_adj_alspacext <- ext_5_6_adj_alspacext$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.alspac56 <- devext_5_6_adj_alspac - devext_5_6_adj_alspacext)

# this difference now needs to be "scaled". Scale parameter is given by:
(scalealspac56 <- devext_5_6_adj_alspacext/ext_5_6_adj_alspacext$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.alspac.56 <- dev.diff.alspac56/scalealspac56)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.alspac.56 <- 1-pchisq(scaled.dev.alspac.56,1))

# model          Resid. Dev            
# no ext         5625327.70
# ext            5625318.36

#p value
# 0.9227695


ext_7_9_adj_alspac <- ds.glmSLMA(formula = "n.ext_pc_.10 ~ f.centre_care.10+ n.birth_weight.10+ n.agebirth_m_y.10+ f.fam_splitup.0.10+f.only_child.10+ f.sex.10+ f.edu_m_.0.10+ f.mom.emp.dich.10+f.ppd.10",
                                 data = "ext_ppdmother_strat",
                                 family = "gaussian",
                                 datasources = c.data[c('alspac')])

ext_7_9_adj_alspacext <- ds.glmSLMA(formula = "n.ext_pc_.10 ~ f.centre_care.10+ n.birth_weight.10+ n.agebirth_m_y.10+ f.fam_splitup.0.10+f.only_child.10 + f.sex.10+ f.edu_m_.0.10+ f.mom.emp.dich.10+f.ppd.10+f.ppd.10*f.centre_care.10",
                                    data = "ext_ppdmother_strat",
                                    family = "gaussian",
                                    datasources = c.data[c('alspac')])



# deviance without exteraction
devext_7_9_adj_alspac <- ext_7_9_adj_alspac$output.summary$study1$deviance.resid
devext_7_9_adj_alspac
# deviance in model with exteraction
devext_7_9_adj_alspacext <- ext_7_9_adj_alspacext$output.summary$study1$deviance.resid
devext_7_9_adj_alspacext
# difference in deviance
(dev.diff.alspac7_9 <- devext_7_9_adj_alspac - devext_7_9_adj_alspacext)

# this difference now needs to be "scaled". Scale parameter is given by:
(scalealspac7_9 <- devext_7_9_adj_alspacext/ext_7_9_adj_alspacext$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.alspac.7_9 <- dev.diff.alspac7_9/scalealspac7_9)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.alspac.7_9 <- 1-pchisq(scaled.dev.alspac.7_9,1))



ext_10_12_adj_alspac <- ds.glmSLMA(formula = "n.ext_pc_.13 ~ f.centre_care.13+ n.birth_weight.13+ n.agebirth_m_y.13+ f.fam_splitup.0.13+f.only_child.13+ f.sex.13+ f.edu_m_.0.13+ f.mom.emp.dich.13+f.ppd.13",
                                   data = "ext_ppdmother_strat",
                                   family = "gaussian",
                                   datasources = c.data[c('alspac')])

ext_10_12_adj_alspacext <- ds.glmSLMA(formula = "n.ext_pc_.13 ~ f.centre_care.13+ n.birth_weight.13+ n.agebirth_m_y.13+ f.fam_splitup.0.13+f.only_child.13+ f.sex.13+ f.edu_m_.0.13+ f.mom.emp.dich.13+f.ppd.13+f.ppd.13*f.centre_care.13",
                                      data = "ext_ppdmother_strat",
                                      family = "gaussian",
                                      datasources = c.data[c('alspac')])



# deviance without exteraction
devext_10_12_adj_alspac <- ext_10_12_adj_alspac$output.summary$study1$deviance.resid

# deviance in model with exteraction
devext_10_12_adj_alspacext <- ext_10_12_adj_alspacext$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.alspac10_12 <- devext_10_12_adj_alspac - devext_10_12_adj_alspacext)

# this difference now needs to be "scaled". Scale parameter is given by:
(scalealspac10_12 <- devext_10_12_adj_alspacext/ext_10_12_adj_alspacext$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.alspac.10_12 <- dev.diff.alspac10_12/scalealspac10_12)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.alspac.10_12 <- 1-pchisq(scaled.dev.alspac.10_12,1))




ext_13_18_adj_alspac <- ds.glmSLMA(formula = "n.ext_pc_.18 ~ f.centre_care.18+ n.birth_weight.18+ n.agebirth_m_y.18+ f.fam_splitup.0.18+f.only_child.18+ f.sex.18+ f.edu_m_.0.18+ f.mom.emp.dich.18+f.ppd.18",
                                   data = "ext_ppdmother_strat",
                                   family = "gaussian",
                                   datasources = c.data[c('alspac')])

ext_13_18_adj_alspacext <- ds.glmSLMA(formula = "n.ext_pc_.18 ~ f.centre_care.18+ n.birth_weight.18+ n.agebirth_m_y.18+ f.fam_splitup.0.18+f.only_child.18+ f.sex.18+ f.edu_m_.0.18+ f.mom.emp.dich.18+f.ppd.18+f.ppd.18*f.centre_care.18",
                                      data = "ext_ppdmother_strat",
                                      family = "gaussian",
                                      datasources = c.data[c('alspac')])



# deviance without exteraction
devext_13_18_adj_alspac <- ext_13_18_adj_alspac$output.summary$study1$deviance.resid

# deviance in model with exteraction
devext_13_18_adj_alspacext <- ext_13_18_adj_alspacext$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.alspac13_18 <- devext_13_18_adj_alspac - devext_13_18_adj_alspacext)

# this difference now needs to be "scaled". Scale parameter is given by:
(scalealspac13_18 <- devext_13_18_adj_alspacext/ext_13_18_adj_alspacext$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.alspac.13_18 <- dev.diff.alspac13_18/scalealspac13_18)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.alspac.13_18 <- 1-pchisq(scaled.dev.alspac.13_18,1))






#genr
ext_5_6_adj_genr <- ds.glmSLMA(formula = "n.ext_pc_.7 ~ f.centre_care.7+ n.birth_weight.7+ n.agebirth_m_y.7+ f.fam_splitup.0.7+ f.only_child.7+ f.sex.7+ f.edu_m_.0.7+ f.femp_cat_mom_0.7+f.ppd.7",
                               data = "ext_ppdmother_strat",
                               family = "gaussian",
                               datasources = c.data[c('generationR')])




ext_5_6_adj_genrext <- ds.glmSLMA(formula = "n.ext_pc_.7 ~ f.centre_care.7+ n.birth_weight.7+ n.agebirth_m_y.7+ f.fam_splitup.0.7+ f.only_child.7+ f.sex.7+ f.edu_m_.0.7+ f.femp_cat_mom_0.7+f.ppd.7+f.ppd.7*f.centre_care.7",
                                  data = "ext_ppdmother_strat",
                                  family = "gaussian",
                                  datasources = c.data[c('generationR')])



# deviance without exteraction
devext_5_6_adj_genr <- ext_5_6_adj_genr$output.summary$study1$deviance.resid

# deviance in model with exteraction
devext_5_6_adj_genrext <- ext_5_6_adj_genrext$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.genr5_6 <- devext_5_6_adj_genr - devext_5_6_adj_genrext)

# this difference now needs to be "scaled". Scale parameter is given by:
(scalegenr5_6 <- devext_5_6_adj_genrext/ext_5_6_adj_genrext$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.genr5_6 <- dev.diff.genr5_6/scalegenr5_6)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.genr5_6 <- 1-pchisq(scaled.dev.genr5_6,1))




ext_7_9_adj_genr <- ds.glmSLMA(formula = "n.ext_pc_.10 ~ f.centre_care.10+ n.birth_weight.10+ n.agebirth_m_y.10+ f.fam_splitup.0.10+ f.only_child.10+ f.sex.10+ f.edu_m_.0.10+ f.femp_cat_mom_0.10+f.ppd.10",
                               data = "ext_ppdmother_strat",
                               family = "gaussian",
                               datasources = c.data[c('generationR')])




ext_7_9_adj_genrext <- ds.glmSLMA(formula = "n.ext_pc_.10 ~ f.centre_care.10+ n.birth_weight.10+ n.agebirth_m_y.10+ f.fam_splitup.0.10+ f.only_child.10+ f.sex.10+ f.edu_m_.0.10+ f.femp_cat_mom_0.10+f.ppd.10+f.ppd.10*f.centre_care.10",
                                  data = "ext_ppdmother_strat",
                                  family = "gaussian",
                                  datasources = c.data[c('generationR')])



# deviance without exteraction
devext_7_9_adj_genr <- ext_7_9_adj_genr$output.summary$study1$deviance.resid

# deviance in model with exteraction
devext_7_9_adj_genrext <- ext_7_9_adj_genrext$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.genr7_9 <- devext_7_9_adj_genr - devext_7_9_adj_genrext)

# this difference now needs to be "scaled". Scale parameter is given by:
(scalegenr7_9 <- devext_7_9_adj_genrext/ext_7_9_adj_genrext$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.genr7_9 <- dev.diff.genr7_9/scalegenr7_9)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.genr7_9 <- 1-pchisq(scaled.dev.genr7_9,1))



ext_10_12_adj_genr <- ds.glmSLMA(formula = "n.ext_pc_.13 ~ f.centre_care.13+ n.birth_weight.13+ n.agebirth_m_y.13+ f.fam_splitup.0.13+ f.only_child.13+ f.sex.13+ f.edu_m_.0.13+ f.femp_cat_mom_0.13+f.ppd.13",
                                 data = "ext_ppdmother_strat",
                                 family = "gaussian",
                                 datasources = c.data[c('generationR')])




ext_10_12_adj_genrext <- ds.glmSLMA(formula = "n.ext_pc_.13 ~ f.centre_care.13+ n.birth_weight.13+ n.agebirth_m_y.13+ f.fam_splitup.0.13+ f.only_child.13+ f.sex.13+ f.edu_m_.0.13+ f.femp_cat_mom_0.13+f.ppd.13+f.ppd.13*f.centre_care.13",
                                    data = "ext_ppdmother_strat",
                                    family = "gaussian",
                                    datasources = c.data[c('generationR')])



# deviance without exteraction
devext_10_12_adj_genr <- ext_10_12_adj_genr$output.summary$study1$deviance.resid

# deviance in model with exteraction
devext_10_12_adj_genrext <- ext_10_12_adj_genrext$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.genr10_12 <- devext_10_12_adj_genr - devext_10_12_adj_genrext)

# this difference now needs to be "scaled". Scale parameter is given by:
(scalegenr10_12 <- devext_10_12_adj_genrext/ext_10_12_adj_genrext$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.genr10_12 <- dev.diff.genr10_12/scalegenr10_12)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.genr10_12 <- 1-pchisq(scaled.dev.genr10_12,1))




#dnbc
ext_7_9_adj_dnbc <- ds.glmSLMA(formula = "n.ext_pc_.10 ~ f.centre_care.10+ n.birth_weight.10+ n.agebirth_m_y.10+ f.fam_splitup.0.10+f.only_child.10+ f.sex.10+ f.edu_m_.0.10+ f.femp_cat_mom_0.10+f.ppd.10",
                               data = "ext_ppdmother_strat",
                               family = "gaussian",
                               datasources = c.data[c('dnbc')])

ext_7_9_adj_dnbcext <- ds.glmSLMA(formula = "n.ext_pc_.10 ~ f.centre_care.10+ n.birth_weight.10+ n.agebirth_m_y.10+ f.fam_splitup.0.10+f.only_child.10+ f.sex.10+ f.edu_m_.0.10+ f.femp_cat_mom_0.10+f.ppd.10+f.ppd.10*f.centre_care.10",
                                  data = "ext_ppdmother_strat",
                                  family = "gaussian",
                                  datasources = c.data[c('dnbc')])



#deviance without exteraction
devext_7_9_adj_dnbc <- ext_7_9_adj_dnbc$output.summary$study1$deviance.resid

# deviance in model with exteraction
devext_7_9_adj_dnbcext <- ext_7_9_adj_dnbcext$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.dnbc7_9 <- devext_7_9_adj_dnbc - devext_7_9_adj_dnbcext)

# this difference now needs to be "scaled". Scale parameter is given by:
(scalednbc7_9 <- devext_7_9_adj_dnbcext/ext_7_9_adj_dnbcext$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.dnbc7_9 <- dev.diff.dnbc7_9/scalednbc7_9)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.dnbc7_9 <- 1-pchisq(scaled.dev.dnbc7_9,1))


ext_10_12_adj_dnbc <- ds.glmSLMA(formula = "n.ext_pc_.13 ~ f.centre_care.13+ n.birth_weight.13+ n.agebirth_m_y.13+ f.fam_splitup.0.13+f.only_child.13+ f.sex.13+ f.edu_m_.0.13+ f.femp_cat_mom_0.13+f.ppd.13",
                                 data = "ext_ppdmother_strat",
                                 family = "gaussian",
                                 datasources = c.data[c('dnbc')])

ext_10_12_adj_dnbcext <- ds.glmSLMA(formula = "n.ext_pc_.13 ~ f.centre_care.13+ n.birth_weight.13+ n.agebirth_m_y.13+ f.fam_splitup.0.13+f.only_child.13+ f.sex.13+ f.edu_m_.0.13+ f.femp_cat_mom_0.13+f.ppd.13+f.ppd.13*f.centre_care.13",
                                    data = "ext_ppdmother_strat",
                                    family = "gaussian",
                                    datasources = c.data[c('dnbc')])



#deviance without exteraction
devext_10_12_adj_dnbc <- ext_10_12_adj_dnbc$output.summary$study1$deviance.resid

# deviance in model with exteraction
devext_10_12_adj_dnbcext <- ext_10_12_adj_dnbcext$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.dnbc10_12 <- devext_10_12_adj_dnbc - devext_10_12_adj_dnbcext)

# this difference now needs to be "scaled". Scale parameter is given by:
(scalednbc10_12 <- devext_10_12_adj_dnbcext/ext_10_12_adj_dnbcext$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.dnbc10_12 <- dev.diff.dnbc10_12/scalednbc10_12)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.dnbc10_12 <- 1-pchisq(scaled.dev.dnbc10_12,1))

ext_13_18_adj_dnbc <- ds.glmSLMA(formula = "n.ext_pc_.18 ~ f.centre_care.18+ n.birth_weight.18+ n.agebirth_m_y.18+f.only_child.18+ f.sex.18+ f.edu_m_.0.18+ f.femp_cat_mom_0.18+f.ppd.18",
                                 data = "ext_ppdmother_strat",
                                 family = "gaussian",
                                 datasources = c.data[c('dnbc')])

ext_13_18_adj_dnbcext <- ds.glmSLMA(formula = "n.ext_pc_.18 ~ f.centre_care.18+ n.birth_weight.18+ n.agebirth_m_y.18+f.only_child.18+ f.sex.18+ f.edu_m_.0.18+ f.femp_cat_mom_0.18+f.ppd.18+f.ppd.18*f.centre_care.18",
                                    data = "ext_ppdmother_strat",
                                    family = "gaussian",
                                    datasources = c.data[c('dnbc')])



#deviance without exteraction
devext_13_18_adj_dnbc <- ext_13_18_adj_dnbc$output.summary$study1$deviance.resid

# deviance in model with exteraction
devext_13_18_adj_dnbcext <- ext_13_18_adj_dnbcext$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.dnbc13_18 <- devext_13_18_adj_dnbc - devext_13_18_adj_dnbcext)

# this difference now needs to be "scaled". Scale parameter is given by:
(scalednbc13_18 <- devext_13_18_adj_dnbcext/ext_13_18_adj_dnbcext$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.dnbc13_18 <- dev.diff.dnbc13_18/scalednbc13_18)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.dnbc13_18 <- 1-pchisq(scaled.dev.dnbc13_18,1))






# EDEN

ext_5_6_adj_eden <- ds.glmSLMA(formula = "n.ext_pc_.7 ~ f.centre_care.7+ n.birth_weight.7+ n.agebirth_m_y.7+ f.fam_splitup.0.7+ f.only_child.7+ f.sex.7+ f.edu_m_.0.7+ f.femp_cat_mom_0.7+f.ppd.7",
                               data = "ext_ppdmother_strat",
                               family = "gaussian",
                               datasources = c.data[c('eden')])




ext_5_6_adj_edenext <- ds.glmSLMA(formula = "n.ext_pc_.7 ~ f.centre_care.7+ n.birth_weight.7+ n.agebirth_m_y.7+ f.fam_splitup.0.7+ f.only_child.7+ f.sex.7+ f.edu_m_.0.7+ f.femp_cat_mom_0.7+f.ppd.7+f.ppd.7*f.centre_care.7",
                                  data = "ext_ppdmother_strat",
                                  family = "gaussian",
                                  datasources = c.data[c('eden')])



# deviance without exteraction
devext_5_6_adj_eden <- ext_5_6_adj_eden$output.summary$study1$deviance.resid

# deviance in model with exteraction
devext_5_6_adj_edenext <- ext_5_6_adj_edenext$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.eden5_6 <- devext_5_6_adj_eden - devext_5_6_adj_edenext)

# this difference now needs to be "scaled". Scale parameter is given by:
(scaleeden5_6 <- devext_5_6_adj_edenext/ext_5_6_adj_edenext$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.eden5_6 <- dev.diff.eden5_6/scaleeden5_6)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.eden5_6 <- 1-pchisq(scaled.dev.eden5_6,1))


ext_7_9_adj_eden <- ds.glmSLMA(formula = "n.ext_pc_.10 ~ f.centre_care.10+ n.birth_weight.10+ n.agebirth_m_y.10+ f.fam_splitup.0.10+ f.only_child.10+ f.sex.10+ f.edu_m_.0.10+ f.femp_cat_mom_0.10+f.ppd.10",
                               data = "ext_ppdmother_strat",
                               family = "gaussian",
                               datasources = c.data[c('eden')])




ext_7_9_adj_edenext <- ds.glmSLMA(formula = "n.ext_pc_.10 ~ f.centre_care.10+ n.birth_weight.10+ n.agebirth_m_y.10+ f.fam_splitup.0.10+ f.only_child.10+ f.sex.10+ f.edu_m_.0.10+ f.femp_cat_mom_0.10+f.ppd.10+f.ppd.10*f.centre_care.10",
                                  data = "ext_ppdmother_strat",
                                  family = "gaussian",
                                  datasources = c.data[c('eden')])



# deviance without exteraction
devext_7_9_adj_eden <- ext_7_9_adj_eden$output.summary$study1$deviance.resid

# deviance in model with exteraction
devext_7_9_adj_edenext <- ext_7_9_adj_edenext$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.eden7_9 <- devext_7_9_adj_eden - devext_7_9_adj_edenext)

# this difference now needs to be "scaled". Scale parameter is given by:
(scaleeden7_9 <- devext_7_9_adj_edenext/ext_7_9_adj_edenext$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.eden7_9 <- dev.diff.eden7_9/scaleeden7_9)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.eden7_9 <- 1-pchisq(scaled.dev.eden7_9,1))


# ELFE

ext_5_6_adj_elfe <- ds.glmSLMA(formula = "n.ext_pc_.7 ~ f.centre_care.7+ n.birth_weight.7+ n.agebirth_m_y.7+ f.fam_splitup.0.7+ f.only_child.7+ f.sex.7+ f.edu_m_.0.7+ f.femp_cat_mom_0.7+f.ppd.7",
                               data = "ext_ppdmother_strat",
                               family = "gaussian",
                               datasources = c.data[c('elfe')])




ext_5_6_adj_elfeext <- ds.glmSLMA(formula = "n.ext_pc_.7 ~ f.centre_care.7+ n.birth_weight.7+ n.agebirth_m_y.7+ f.fam_splitup.0.7+ f.only_child.7+ f.sex.7+ f.edu_m_.0.7+ f.femp_cat_mom_0.7+f.ppd.7+f.ppd.7*f.centre_care.7",
                                  data = "ext_ppdmother_strat",
                                  family = "gaussian",
                                  datasources = c.data[c('elfe')])



# deviance without exteraction
devext_5_6_adj_elfe <- ext_5_6_adj_elfe$output.summary$study1$deviance.resid

# deviance in model with exteraction
devext_5_6_adj_elfeext <- ext_5_6_adj_elfeext$output.summary$study1$deviance.resid

# difference in deviance
(dev.diff.elfe5_6 <- devext_5_6_adj_elfe - devext_5_6_adj_elfeext)

# this difference now needs to be "scaled". Scale parameter is given by:
(scaleelfe5_6 <- devext_5_6_adj_elfeext/ext_5_6_adj_elfeext$output.summary$study1$df.resid)

# Change in "scaled" deviance may now be estimated as 
(scaled.dev.elfe5_6 <- dev.diff.elfe5_6/scaleelfe5_6)

# This can be treated as a chi squared on 1 degree of freedom

# one degree because df in mod1 is 1727 and df in mod2 is 1726
(p.elfe5_6 <- 1-pchisq(scaled.dev.elfe5_6,1))


library(DSMolgenisArmadillo)
library(dsBaseClient)
library(remotes)
library(DSI)
library(DSOpal)
library('stringr')
#login to all cohorts

#### login




c.data <- DSI::datashield.login(logins = logindata, restore="internal_income_strata")

ds.mean('int_income_strat$n.int_pc_.7')
ds.mean('int_income_strat$n.int_pc_.10')
ds.mean('int_income_strat$n.int_pc_.13')
ds.mean('int_income_strat$n.int_pc_.18')
c.data <- DSI::datashield.login(logins = logindata, restore="external_income_strata")

ds.mean('ext_income_strat$n.ext_pc_.7')
ds.mean('ext_income_strat$n.ext_pc_.10')
ds.mean('ext_income_strat$n.ext_pc_.13')
ds.mean('ext_income_strat$n.ext_pc_.18')
## to collect sample sizes
ds.dim('ext_ppdmother_strat')
ds.colnames('ext_ppdmother_strat')
ds.mean('ext_ppdmother_strat$n.ext_pc_.7')
ds.mean('ext_ppdmother_strat$n.ext_pc_.10')
ds.mean('ext_ppdmother_strat$n.ext_pc_.13')
ds.mean('ext_ppdmother_strat$n.ext_pc_.18')
