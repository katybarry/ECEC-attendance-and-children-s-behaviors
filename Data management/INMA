################################################################################
## Project: ECEC attendance and internalizing and externalizing behaviors in adolescence
## Script purpose: INMA data management
## Date: 01/13/2023
## Author: Katharine M Barry
## Email: katharine.barry@iplesp.upmc.fr
################################################################################   
library(dsHelper)
#load libraries
library(DSMolgenisArmadillo)
library(dsBaseClient)

library(DSI)
library(DSOpal)


# create loginframe
test <- builder$build()
# login into server
conns <- datashield.login(logins = test, assign = TRUE)
datashield.tables(conns)

# assign tables
#outcome variables
datashield.assign.table(
  conns =   conns,
  table = "lc_isglobal_outcome_1_1.1_1_outcome_1_0_yearly_rep_210112_1",
  symbol = "is_outcome")
#core variables
datashield.assign.table(
  conns =   conns,
  table = "lc_isglobal_core_2_3.2_3_core_1_2_yearly_rep_210112_1",
  symbol = "is_core")
#non-response variables
datashield.assign.table(
  conns =   conns,
  table = "lc_isglobal_core_2_3.2_3_core_1_2_non_rep_210112_1",
  symbol = "is_norep")

# check the columns in the non repeated data
ds.colnames("is_outcome", datasources = conns)
# check columns of non repeated data
ds.colnames("is_core", datasources = conns)
# check the columns in the yearly repeated data
ds.colnames("is_norep", datasources = conns)

### INMA has childcare variables from year 0 to year 2

#reshaping data into wide format
ds.reShape(
  data.name = "is_core",
  timevar.name = "age_years",
  idvar.name = "child_id",
  v.names = c( "childcarecentre_", "childcarerel_","childcareprof_","fam_splitup", "childcare_",       
               "edu_f1_", "edu_m_", "famsize_child", "famsize_adult", "hhincome_", "occup_m_", "occup_f1_"),
  direction = "wide",
  newobj = "inma_core_wide",
  datasources = conns
)

# verifying reshape worked
ds.colnames('inma_core_wide')

# show the reshaped columns of the new data frame
ds.colnames("is_outcome", datasources = conns)

ds.merge(
  x.name = "is_outcome",
  y.name = "inma_core_wide",
  by.x.names = "child_id",
  by.y.names = "child_id",
  newobj = "df_inma",
  datasources = conns
)

# merge the dataset with the nonrepeated variables
ds.merge(
  x.name =  "df_inma",
  y.name = "is_norep",
  by.x.names = "child_id",
  by.y.names = "child_id",
  newobj = "df_final",
  datasources = conns
)

## ---- check the merged variables
ds.colnames("df_final", datasources = conns)

ds.table('df_final$int_eval_', datasources=conns)
ds.table('df_final$ext_eval_', datasources=conns)



datashield.workspace_save(conns = conns, ws = "katharine_barry_inma_built")


# creating exposure variable
###### childcare center variable will be coded into a dichotomise variable in which if a child
###### was enrolled in child care at year 0  to up to year 3 

ds.asNumeric('df_final$childcarecentre_.0', newobj='centre_0')
ds.asNumeric('df_final$childcarecentre_.1', newobj='centre_1')
ds.asNumeric('df_final$childcarecentre_.2', newobj='centre_2')

ds.replaceNA(x='centre_0', forNA =100, newobj="NAcentre_.0", datasources=conns)
ds.replaceNA(x='centre_1', forNA =100, newobj="NAcentre_.1", datasources=conns)
ds.replaceNA(x='centre_2', forNA =100, newobj="NAcentre_.2", datasources=conns)
ds.table("NAcentre_.0")
ds.table("NAcentre_.1")
ds.table("NAcentre_.2")
ds.make(toAssign='NAcentre_.0 + NAcentre_.1+ NAcentre_.2 ', newobj = 'cen_care')
ds.table ('cen_care', datasources=conns)# this variable shows us how many children attended childcar center in just one year ,two years



#going to dichotomize the variable as time is not our interest in the exposure variable
ds.recodeValues(var.name='cen_care', 
                values2replace.vector = 2,
                new.values.vector = 1, newobj='centre_care1', datasources=conns)

ds.table('centre_care1',datasources=conns)
ds.recodeValues(var.name='centre_care1', 
                values2replace.vector = c(3,4,100,101,102),
                new.values.vector = c(1,1,0,1,1), newobj='centre_care1')
ds.table('centre_care1')
ds.recodeValues(var.name='centre_care1', 
                values2replace.vector = c(201,300),
                new.values.vector = c(1,NA), newobj='centre_care')
ds.table('centre_care') # children were in a childcare center at one point from year 0 to year 2 (yes/no)




ds.recodeValues(var.name='centre_care', 
                values2replace.vector = c(0,1),
                new.values.vector = c(0,1),missing=NA, newobj='type_care')


ds.dataFrame(x=c('df_final','centre_care', 'type_care'), newobj='df_4')

datashield.workspace_save(conns = conns, ws = "exposure")



################################################
##covariate variable creation####################
################################################# 


#categorize mother occupation into employed, unemployed, and other (year 0)
ds.table("df_4$occup_m_.0")
ds.asNumeric("df_4$occup_m_.0", newobj='occ_num_m_0')
ds.table('occ_num_m_0')
ds.recodeValues(var.name='occ_num_m_0', values2replace.vector = c(1,3,4,5,6), new.values.vector = c(1,0,2,2,2),newobj="emp_cat_mom_0")
ds.table('emp_cat_mom_0') # 0=unemployed 1=employed 2=other
## convert to a factor variable
ds.asFactor('emp_cat_mom_0',newobj='femp_cat_mom_0')
ds.table('femp_cat_mom_0')

#father's employment status 

ds.table("df_4$occup_f1_.0")
ds.asNumeric("df_4$occup_f1_.0", newobj='occ_num_f_0')
ds.table('occ_num_f_0')
ds.recodeValues(var.name='occ_num_f_0', values2replace.vector = c(1,3,4,6), new.values.vector = c(1,0,2,2),newobj="emp_cat_dad_0")
ds.table('emp_cat_dad_0') # 0=unemployed 1=employed 2=other
## convert to a factor variable
ds.asFactor('emp_cat_dad_0',newobj='femp_cat_dad_0')
ds.table('femp_cat_dad_0')


#sibling position dichotomized into only child variable (wanting for inma to add this variable)
ds.asNumeric("df_4$sibling_pos", newobj = "num_sib")
ds.Boole(V1="num_sib", V2='1', Boolean.operator='==', numeric.output=TRUE, newobj="only_child")
ds.table('only_child') 
ds.table("df_4$sibling_pos") 

# make gestational weight numeric if not already
ds.asNumeric('df_4$ga_lmp', newobj='n.ga_lmp')

ds.dataFrame(x=c('only_child', 'df_4','femp_cat_mom_0', 'emp_cat_mom_0', 'femp_cat_dad_0', 'n.ga_lmp'), newobj='final')

ds.colnames('final')

ds.table('final$ppd')


datashield.workspace_save(conns = conns, ws = "covariates")


