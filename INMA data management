################################################################################
## Project: ECEC attendance and internalizing and externalizing behaviors in adolescence
## Script purpose: INMA data management
## Date: 01/13/2023
## Author: Katharine M Barry
## Email: katharine.barry@iplesp.upmc.fr
################################################################################   

#load libraries
library(DSMolgenisArmadillo)
library(dsBaseClient)
library(dsHelper)
library(DSI)
library(DSOpal)

builder <- DSI::newDSLoginBuilder()
builder$append(server = "INMA", 
               url = "", 
               user = "", 
               password = "",
               driver = "OpalDriver",
               profile='rock-inma')

# create loginframe
test <- builder$build()
# login into server
conns <- datashield.login(logins = test, assign = TRUE)
datashield.tables(conns)
# assign tables
#outcome variables
datashield.assign.table(
  conns =   conns,
  table = "lc_isglobal_outcome_1_1.1_1_outcome_1_0_yearly_rep_210112_1",
  symbol = "is_outcome")
#core variables
datashield.assign.table(
  conns =   conns,
  table = "lc_isglobal_core_2_1.2_1_core_1_1_yearly_rep_210112_1",
  symbol = "is_core")
#non-response variables
datashield.assign.table(
  conns =   conns,
  table = "lc_isglobal_core_2_1.2_1_core_1_1_non_rep_210112_1",
  symbol = "is_norep")

# check the columns in the non repeated data
ds.colnames("is_outcome", datasources = conns)
# check columns of non repeated data
ds.colnames("is_core", datasources = conns)
# check the columns in the yearly repeated data
ds.colnames("is_norep", datasources = conns)

### INMA has childcare variables from year 0 to year 2

#reshaping data into wide format
ds.reShape(
  data.name = "is_core",
  timevar.name = "age_years",
  idvar.name = "child_id",
  v.names = c( "childcarecentre_", "childcarerel_","childcareprof_","fam_splitup", "childcare_",       
               "edu_f1_", "edu_m_", "famsize_child", "famsize_adult", "hhincome_", "occup_m_", "occup_f1_"),
  direction = "wide",
  newobj = "inma_core_wide",
  datasources = conns
)

# verifying reshape worked
ds.colnames('inma_core_wide')

# show the reshaped columns of the new data frame
ds.colnames("is_outcome", datasources = conns)

ds.merge(
  x.name = "is_outcome",
  y.name = "inma_core_wide",
  by.x.names = "child_id",
  by.y.names = "child_id",
  newobj = "df_inma",
  datasources = conns
)

# merge the dataset with the nonrepeated variables
ds.merge(
  x.name =  "df_inma",
  y.name = "is_norep",
  by.x.names = "child_id",
  by.y.names = "child_id",
  newobj = "df_final",
  datasources = conns
)

## ---- check the merged variables
ds.colnames("df_final", datasources = conns)

ds.table('df_final$int_eval_', datasources=conns)
ds.table('df_final$ext_eval_', datasources=conns)



datashield.workspace_save(conns = conns, ws = "katharine_barry_inma_built")


# creating exposure variable
###### childcare center variable will be coded into a dichotomise variable in which if a child
###### was enrolled in child care at year 0  to up to year 3 

ds.asNumeric('df_final$childcarecentre_.0', newobj='centre_0')
ds.asNumeric('df_final$childcarecentre_.1', newobj='centre_1')
ds.asNumeric('df_final$childcarecentre_.2', newobj='centre_2')

ds.replaceNA(x='centre_0', forNA =100, newobj="NAcentre_.0", datasources=conns)
ds.replaceNA(x='centre_1', forNA =100, newobj="NAcentre_.1", datasources=conns)
ds.replaceNA(x='centre_2', forNA =100, newobj="NAcentre_.2", datasources=conns)
ds.table("NAcentre_.0")
ds.table("NAcentre_.1")
ds.table("NAcentre_.2")
ds.make(toAssign='NAcentre_.0 + NAcentre_.1+ NAcentre_.2 ', newobj = 'cen_care')
ds.table ('cen_care', datasources=conns)# this variable shows us how many children attended childcar center in just one year ,two years



#going to dichotomize the variable as time is not our interest in the exposure variable
ds.recodeValues(var.name='cen_care', 
                values2replace.vector = 2,
                new.values.vector = 1, newobj='centre_care1', datasources=conns)

ds.table('centre_care1',datasources=conns)
ds.recodeValues(var.name='centre_care1', 
                values2replace.vector = c(3,4,100,101,102),
                new.values.vector = c(1,1,0,1,1), newobj='centre_care1')
ds.table('centre_care1')
ds.recodeValues(var.name='centre_care1', 
                values2replace.vector = c(201,300),
                new.values.vector = c(1,NA), newobj='centre_care')
ds.table('centre_care') # children were in a childcare center at one point from year 0 to year 2 (yes/no)


ds.make(toAssign='NAcentre_.0 + NAcentre_.1+ NAcentre_.2', newobj = 'cen_care')
ds.table ('cen_care', datasources=c.data)

ds.recodeValues(var.name='cen_care',
                values2replace.vector = c(0,100,201,300),
                new.values.vector = c(0,0,1,NA), newobj='cen_dur')
ds.table('cen_dur')

ds.asNumeric('cen_dur', newobj='dur_num')
ds.recodeValues(var.name='dur_num',
                values2replace.vector = c(0,1,2,3,4),
                new.values.vector = c(0,1,1,2,2), newobj='cen_dur_cat')
ds.asFactor('cen_dur_cat', newobj.name='f.cen_dur_cat')
ds.table('cen_dur')
ds.table('f.cen_dur_cat')
ds.dataFrame(x=c('df_final','cen_dur','f.cen_dur_cat','centre_care', 'centre_0', 'centre_1', 'centre_2'), newobj='df_4')

datashield.workspace_save(conns = conns, ws = "inma_trajectoryexposure")



################################################
##covariate variable creation####################
################################################# 


#categorize mother occupation into employed, unemployed, and other (year 0)
ds.table("df_4$occup_m_.0")
ds.asNumeric("df_4$occup_m_.0", newobj='occ_num_m_0')
ds.table('occ_num_m_0')
ds.recodeValues(var.name='occ_num_m_0', values2replace.vector = c(1,3,4,5,6), new.values.vector = c(1,0,2,2,2),newobj="emp_cat_mom_0")
ds.table('emp_cat_mom_0') # 0=unemployed 1=employed 2=other
## convert to a factor variable
ds.asFactor('emp_cat_mom_0',newobj='femp_cat_mom_0')
ds.table('femp_cat_mom_0')

#father's employment status 

ds.table("df_4$occup_f1_.0")
ds.asNumeric("df_4$occup_f1_.0", newobj='occ_num_f_0')
ds.table('occ_num_f_0')
ds.recodeValues(var.name='occ_num_f_0', values2replace.vector = c(1,3,4,6), new.values.vector = c(1,0,2,2),newobj="emp_cat_dad_0")
ds.table('emp_cat_dad_0') # 0=unemployed 1=employed 2=other
## convert to a factor variable
ds.asFactor('emp_cat_dad_0',newobj='femp_cat_dad_0')
ds.table('femp_cat_dad_0')


#sibling position dichotomized into only child variable (wanting for inma to add this variable)
ds.asNumeric("df_4$sibling_pos", newobj = "num_sib")
ds.Boole(V1="num_sib", V2='1', Boolean.operator='==', numeric.output=TRUE, newobj="only_child")
ds.table('only_child') 
ds.table("df_4$sibling_pos") 



ds.dataFrame(x=c('only_child', 'df_4','femp_cat_mom_0', 'emp_cat_mom_0', 'femp_cat_dad_0'), newobj='final')
#conns <- DSI::datashield.login(logins = test, restore='lineardata')
ds.colnames('final')
datashield.workspace_save(conns = conns, ws = "interactions")

conns <- DSI::datashield.login(logins = test, restore='interactions')

###   everyone that replied to child daycare center #####
ds.table("final$centre_care")
ds.dataFrameSubset(
  df.name = "final",
  newobj = "exposure_com",
  V1.name = "final$centre_care",
  V2.name = "0",
  Boolean.operator = ">=", keep.NAs = FALSE, datasources = conns
)


##checking instrument and person asked to measure internalizing and externalizing behavior

ds.table('exposure_com$ext_eval_.7')#parent reported data
ds.table('exposure_com$int_eval_.7')# parent reported data

ds.table('df_final$fam_splitup.0')##too many missing but majority are two parent household
ds.colnames('exposure_com')
#creating subset of individuals with complete cases for internalizing behavior:
ds.dataFrame(x=c('exposure_com$cen_dur', 'exposure_com$f.cen_dur_cat','exposure_com$only_child','exposure_com$birth_weight','exposure_com$sex', 'exposure_com$int_age_','exposure_com$age_years','exposure_com$child_id','exposure_com$int_pc_','exposure_com$centre_care','exposure_com$agebirth_m_y','exposure_com$edu_m_.0','exposure_com$femp_cat_mom_0'), check.names=TRUE, stringsAsFactors = TRUE, completeCases=TRUE, newobj="dataint", datasources=conns)


ds.summary('dataint')

#need to subset so that all my outcome measures come after my exposure variable
ds.dataFrameSubset(
  df.name = "dataint",
  newobj = "dataint",
  V1.name = "dataint$age_years",
  V2.name = "4",
  Boolean.operator = ">", datasources = conns
)

#subset of externalizing behavior complete case analysis
ds.dataFrame(x=c('exposure_com$cen_dur','exposure_com$f.cen_dur_cat','exposure_com$only_child','exposure_com$birth_weight','exposure_com$sex', 'exposure_com$ext_age_','exposure_com$age_years','exposure_com$child_id','exposure_com$ext_pc_','exposure_com$centre_care','exposure_com$agebirth_m_y','exposure_com$edu_m_.0','exposure_com$femp_cat_mom_0'), check.names=TRUE, stringsAsFactors = TRUE, completeCases=TRUE, newobj="dataext", datasources=conns)
# setting id variable as an integer for trajectories


#need to subset so that all my outcomes come after my exposure variable
ds.dataFrameSubset(
  df.name = "dataext",
  newobj = "dataext",
  V1.name = "dataext$age_years",
  V2.name = "4",
  Boolean.operator = ">", datasources = conns
)
ds.summary('dataext')

datashield.workspace_save(conns = conns, ws = "lineardata")

##########################################################################
##########################################################################
############## INMA ANALYSIS##############################################

####################
####################
#Descriptive statistics (trajectories of internalizing and externalizing behaviors and descriptive tables for both groups)
#descriptive tables analysis for internalizing behavior#
conns <- DSI::datashield.login(logins = test, restore="lineardata")


#descriptive tables analysis for internalizing behavior#

### placing dataset in the wide format in order to perform descriptive statistics
ds.dim('dataint')
ds.colnames('dataint')

ds.reShape(
  data.name = 'dataint',
  v.names = c('int_age_', 'int_pc_'),
  timevar.name = "age_years",
  idvar.name = "child_id",
  direction = 'wide',
  newobj = "intdescriptive",
  datasources = conns
)

# verifying dimensions
ds.dim('intdescriptive')
ds.colnames('intdescriptive')



ds.reShape(
  data.name = 'dataext',
  v.names = c('ext_age_', 'ext_pc_'),
  timevar.name = "age_years",
  idvar.name = "child_id",
  direction = 'wide',
  newobj = "extdescriptive",
  datasources = conns
)


ds.dim('extdescriptive')
ds.colnames('extdescriptive')
### set all variables to appropriate class in internalizing behavior 
ds.asFactor('dataint$centre_care', newobj.name='f.centre_care')
ds.asNumeric('dataint$int_age_', newobj='n.int_age_')
ds.asNumeric('dataint$age_years', newobj='n.age_years')
ds.asNumeric('dataint$int_pc_', newobj='n.int_pc_')
ds.asNumeric('dataint$agebirth_m_y', newobj='n.agebirth_m_y')
ds.asNumeric('dataint$birth_weight', newobj='n.birth_weight')
ds.asNumeric('dataint$child_id', newobj='n.child_id')
ds.asFactor('dataint$only_child', newobj.name='f.only_child')
ds.asFactor('dataint$sex', newobj.name='f.sex')
ds.asFactor('dataint$edu_m_.0', newobj.name='f.edu_m_.0')
ds.asFactor('dataint$femp_cat_mom_0', newobj.name='f.femp_cat_mom_0')
ds.asNumeric('dataint$cen_dur', newobj='n.cen_dur')
ds.dataFrame(x=c('dataint', 'n.cen_dur','f.femp_cat_mom_0','f.centre_care','n.age_years', 'n.int_age_','n.int_pc_', 'n.agebirth_m_y', 'n.birth_weight', 'n.child_id', 'f.only_child', 'f.sex', 'f.edu_m_.0'), newobj = 'dataint')


ds.colnames('dataint')
ds.colnames('dataext')
### set all variables to appropriate class in externalizing behavior
ds.asFactor('dataext$centre_care', newobj.name='f.centre_care')
ds.asNumeric('dataext$ext_age_', newobj='n.ext_age_')
ds.asNumeric('dataext$age_years', newobj='n.age_years')
ds.asNumeric('dataext$ext_pc_', newobj='n.ext_pc_')
ds.asNumeric('dataext$agebirth_m_y', newobj='n.agebirth_m_y')
ds.asNumeric('dataext$birth_weight', newobj='n.birth_weight')
ds.asNumeric('dataext$child_id', newobj='n.child_id')
ds.asFactor('dataext$only_child', newobj.name='f.only_child')
ds.asFactor('dataext$sex', newobj.name='f.sex')
ds.asFactor('dataext$edu_m_.0', newobj.name='f.edu_m_.0')
ds.asFactor('dataext$femp_cat_mom_0', newobj.name='f.femp_cat_mom_0')
ds.asNumeric('dataext$cen_dur', newobj='n.cen_dur')


ds.dataFrame(x=c('dataext','n.cen_dur','f.femp_cat_mom_0','f.centre_care','n.age_years', 'n.ext_age_','n.ext_pc_', 'n.agebirth_m_y', 'n.birth_weight', 'n.child_id',  'f.only_child', 'f.sex', 'f.edu_m_.0'), newobj = 'dataext')

ds.colnames('dataint')
ds.colnames('dataext')
ds.dim('dataint')
ds.dim('dataext')
datashield.workspace_save(conns = conns, ws = "ldata")

















